{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dice-guardians-module/dist/index.js","./dice-guardians-module/dist/lib/assets.js","./dice-guardians-module/dist/lib/audio.js","./dice-guardians-module/dist/lib/board.js","./dice-guardians-module/dist/lib/card.js","./dice-guardians-module/dist/lib/cell.js","./dice-guardians-module/dist/lib/demo.js","./dice-guardians-module/dist/lib/dice.js","./dice-guardians-module/dist/lib/energy-pool.js","./dice-guardians-module/dist/lib/events.js","./dice-guardians-module/dist/lib/map.js","./dice-guardians-module/dist/lib/player.js","./dice-guardians-module/dist/lib/room-collection.js","./dice-guardians-module/dist/lib/room.js","./dice-guardians-module/dist/lib/storage.js","./dice-guardians-module/dist/lib/tutorial.js","./dice-guardians-module/dist/lib/user.js","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/app.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/dice-guardians-module.service.ts","./src/environments/environment.ts","./src/main.ts","crypto (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZa;AACb,UAAU,iBAAiB;AAC3B,UAAU,WAAW;AACrB,8CAA8C,cAAc;AAC5D,UAAU,YAAY;AACtB;AACA,aAAa,mBAAO,CAAC,4DAAY;AACjC,wCAAwC,qCAAqC,oBAAoB,EAAE,EAAE;AACrG,cAAc,mBAAO,CAAC,8DAAa;AACnC,wCAAwC,qCAAqC,qBAAqB,EAAE,EAAE;AACtG,yCAAyC,qCAAqC,sBAAsB,EAAE,EAAE;AACxG,YAAY,mBAAO,CAAC,0DAAW;AAC/B,uCAAuC,qCAAqC,kBAAkB,EAAE,EAAE;AAClG,eAAe,mBAAO,CAAC,gEAAc;AACrC,0CAA0C,qCAAqC,wBAAwB,EAAE,EAAE;AAC3G,aAAa,mBAAO,CAAC,4DAAY;AACjC,wCAAwC,qCAAqC,oBAAoB,EAAE,EAAE;AACrG,gBAAgB,mBAAO,CAAC,kEAAe;AACvC,2CAA2C,qCAAqC,0BAA0B,EAAE,EAAE;AAC9G,aAAa,mBAAO,CAAC,4DAAY;AACjC,+CAA+C,qCAAqC,2BAA2B,EAAE,EAAE;AACnH,gDAAgD,qCAAqC,4BAA4B,EAAE,EAAE;AACrH,kDAAkD,qCAAqC,8BAA8B,EAAE,EAAE;AACzH,aAAa,mBAAO,CAAC,4DAAY;AACjC,wCAAwC,qCAAqC,oBAAoB,EAAE,EAAE;AACrG,wBAAwB,mBAAO,CAAC,kFAAuB;AACvD,yCAAyC,qCAAqC,gCAAgC,EAAE,EAAE;AAClH,yCAAyC,qCAAqC,gCAAgC,EAAE,EAAE;AAClH,eAAe,mBAAO,CAAC,gEAAc;AACrC,0CAA0C,qCAAqC,wBAAwB,EAAE,EAAE;AAC3G,iBAAiB,mBAAO,CAAC,oEAAgB;AACzC,4CAA4C,qCAAqC,4BAA4B,EAAE,EAAE;AACjH,cAAc,mBAAO,CAAC,8DAAa;AACnC,2CAA2C,qCAAqC,wBAAwB,EAAE,EAAE;AAC5G;AACA,QAAQ,gBAAgB;AACxB;AACA;AACA,CAAC;;;;;;;;;;;;;ACtCY;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,gBAAgB;AAChB,eAAe;AACf,YAAY;AACZ,gBAAgB;AAChB,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACjDa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5Da;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,wDAAQ;AAC/B,iBAAiB,mBAAO,CAAC,4DAAU;AACnC,mBAAmB,mBAAO,CAAC,gEAAY;AACvC,gBAAgB,mBAAO,CAAC,0DAAS;AACjC,aAAa,mBAAO,CAAC,wDAAQ;AAC7B,wCAAwC,qCAAqC,oBAAoB,EAAE,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;;;;;AAKA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yCAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gCAAgC;AACxE;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gCAAgC;AAC1E;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA,wCAAwC,gCAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1uBa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,0DAAS;AACjC,iBAAiB,mBAAO,CAAC,4DAAU;AACnC,eAAe,mBAAO,CAAC,iFAAM;AAC7B,kBAAkB,mBAAO,CAAC,yEAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3Ia;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,aAAa;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Fa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,wwEAAwE;AACxE,KAAK;AACL;AACA;AACA;AACA;AACA,0EAA0E;AAC1E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,cAAc;AACnB;AACA;AACA;AACA,KAAK,aAAa;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrXa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,iCAAiC,mBAAO,CAAC,oEAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzHa;AACb,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,4DAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrPa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,iCAAiC,mBAAO,CAAC,qEAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,wDAAQ;AAC/B,sBAAsB,mBAAO,CAAC,sEAAe;AAC7C,iBAAiB,mBAAO,CAAC,4DAAU;AACnC,gBAAgB,mBAAO,CAAC,0DAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,EAAE;AACnD;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,4BAA4B;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI;;;;;;;;;;;;;AC5QQ;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,wDAAQ;AAC/B,eAAe,mBAAO,CAAC,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK,gDAAgD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,iCAAiC;AACtC,KAAK,kCAAkC;AACvC,KAAK,kCAAkC;AACvC,KAAK,iCAAiC;AACtC,KAAK,kCAAkC;AACvC,KAAK,iCAAiC;AACtC,KAAK,kCAAkC;AACvC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,kCAAkC;AACvC,KAAK,iCAAiC;AACtC,KAAK,kCAAkC;AACvC,KAAK,kCAAkC;AACvC,KAAK,iCAAiC;AACtC,KAAK,kCAAkC;AACvC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC,KAAK,iCAAiC;AACtC;AACA,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC,KAAK,4BAA4B;AACjC;;;;;;;;;;;;;ACxLa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,wDAAQ;AAC/B,iBAAiB,mBAAO,CAAC,4DAAU;AACnC;AACA,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD,+BAA+B,sBAAsB;AACrD;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;;AAEA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ka;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,4DAAU;AACnC,gBAAgB,mBAAO,CAAC,0DAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mDAAmD;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;ACvMa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACnOA;AAAe,mIAAoE,E;;;;;;;;;;;;;;;;;;ACA1C;AACiC;AAE1E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,GAAG,EAAE,CAAC,uTAA4B,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;KAC9E;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,QAAQ;QACd,YAAY,EAAE,GAAG,EAAE,CAAC,oNAAsC,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC;KAC1F;IACD;QACE,IAAI,EAAE,aAAa;QACnB,YAAY,EAAE,GAAG,EAAE,CAAC,uYAAgD,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,qBAAqB,CAAC;KACzG;IACD;QACE,IAAI,EAAE,aAAa;QACnB,YAAY,EAAE,GAAG,EAAE,CAAC,uYAAgD,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC;KACxG;CACF,CAAC;AAQF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAN5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,kBAAkB,EAAE,iEAAiB,EAAE,CAAC;SACxE;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;ACjC7B;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;;;;;;;;;ACAlJ;AAEA;AACqB;AACN;AAOzD,IAAa,YAAY,GAAzB,MAAa,YAAY;IACvB,YACU,QAAkB,EAClB,YAA0B,EAC1B,SAAoB;QAFpB,aAAQ,GAAR,QAAQ,CAAU;QAClB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,cAAS,GAAT,SAAS,CAAW;QAE5B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YAC9B,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAbqB,uDAAQ;YACJ,4EAAY;YACf,sEAAS;;AAJnB,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iNAAiC;;KAElC,CAAC;GACW,YAAY,CAexB;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXgB;AACiB;AACL;AAEY;AACF;AACN;AAEV;AACS;AAEA;AAC2B;AAqBnF,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;AAAZ,SAAS;IAjBrB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,2DAAY,CAAC;QAC5B,eAAe,EAAE,EAAE;QACnB,OAAO,EAAE;YACP,uEAAa;YACb,0DAAW,CAAC,OAAO,EAAE;YACrB,oEAAgB;YAChB,qEAAgB;SACjB;QACD,SAAS,EAAE;YACT,sEAAS;YACT,4EAAY;YACZ,EAAE,OAAO,EAAE,kEAAkB,EAAE,QAAQ,EAAE,iEAAkB,EAAE;YAC7D,mGAA0B;SAC3B;QACD,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;ACjCwC;AACrB;AACC;AAEqB;AAsBjC;AAM9B,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAoBrC,YACE,UAAqB,EACrB,aAAkC,EAClC,QAAiB;QAEjB,MAAM,IAAI,GAAG,IAAI;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ;QAExB,IAAI,CAAC,aAAa,GAAG,aAAa;QAGlC,IAAI,CAAC,GAAG,GAAG,IAAI,yDAAG,CAAC,IAAI,EAAE;YACvB,OAAO;YACP,2DAAK;SACN,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG,IAAI,2DAAK,CACpB,IAAI,EACJ,CAAC,2DAAK,EAAE,2DAAK,CAAC,EACd;YACE,GAAG,EAAG,IAAI,4DAAM,CAAC,iEAAW,EAAE,IAAI,CAAC;YACnC,IAAI,EAAG,IAAI,4DAAM,CAAC,kEAAY,EAAE,IAAI,CAAC;SACtC,EACD,IAAI,CACL;QAGD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAEpD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAGnD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;QACrC,CAAC,CAAC;QACF;;;;;;;oCAO4B;IAE9B,CAAC;CACF;;YAhDc,+DAAU;YACN,kEAAmB;YACzB,uDAAQ;;AAvBR,0BAA0B;IAHtC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,0BAA0B,CAqEtC;AArEsC;;;;;;;;;;;;;AChCvC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXlC,e","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\"use strict\";\n//export { TmuxController } from './controllers/tmux'\n//export { DiceTmux } from './controllers/dice-tmux'\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//export { CardModel } from './models/card-model'\n//export class TmuxController\nvar user_1 = require(\"./lib/user\");\nObject.defineProperty(exports, \"User\", { enumerable: true, get: function () { return user_1.User; } });\nvar board_1 = require(\"./lib/board\");\nObject.defineProperty(exports, \"Cell\", { enumerable: true, get: function () { return board_1.Cell; } });\nObject.defineProperty(exports, \"Board\", { enumerable: true, get: function () { return board_1.Board; } });\nvar map_1 = require(\"./lib/map\");\nObject.defineProperty(exports, \"Map\", { enumerable: true, get: function () { return map_1.Map; } });\nvar player_1 = require(\"./lib/player\");\nObject.defineProperty(exports, \"Player\", { enumerable: true, get: function () { return player_1.Player; } });\nvar dice_1 = require(\"./lib/dice\");\nObject.defineProperty(exports, \"Dice\", { enumerable: true, get: function () { return dice_1.Dice; } });\nvar storage_1 = require(\"./lib/storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\nvar demo_1 = require(\"./lib/demo\");\nObject.defineProperty(exports, \"DEFAULT_RED\", { enumerable: true, get: function () { return demo_1.DEFAULT_RED; } });\nObject.defineProperty(exports, \"DEFAULT_BLUE\", { enumerable: true, get: function () { return demo_1.DEFAULT_BLUE; } });\nObject.defineProperty(exports, \"cardCollection\", { enumerable: true, get: function () { return demo_1.cardCollection; } });\nvar room_1 = require(\"./lib/room\");\nObject.defineProperty(exports, \"Room\", { enumerable: true, get: function () { return room_1.Room; } });\nvar room_collection_1 = require(\"./lib/room-collection\");\nObject.defineProperty(exports, \"Room0\", { enumerable: true, get: function () { return room_collection_1.Room0; } });\nObject.defineProperty(exports, \"Room1\", { enumerable: true, get: function () { return room_collection_1.Room1; } });\nvar assets_1 = require(\"./lib/assets\");\nObject.defineProperty(exports, \"ASSETS\", { enumerable: true, get: function () { return assets_1.ASSETS; } });\nvar tutorial_1 = require(\"./lib/tutorial\");\nObject.defineProperty(exports, \"Tutorial\", { enumerable: true, get: function () { return tutorial_1.Tutorial; } });\nvar audio_1 = require(\"./lib/audio\");\nObject.defineProperty(exports, \"DGAudio\", { enumerable: true, get: function () { return audio_1.DGAudio; } });\n/*\nexport { Actor, Stanza } from './lib/index'\nexport {\n  NameService\n} from './outfits/index'*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ASSETS = void 0;\nclass AssetsManager {\n    constructor(config) {\n        this.config = config;\n    }\n    get(key) {\n        /*if (!this.config[key]){\n          throw new Error('No assets found for key `ASSETS.' + key + '`')\n        }*/\n        const keys = key.split('.');\n        let current = null;\n        for (let i = 0; i < keys.length; i++) {\n            if (!current) {\n                current = this.config[keys[i]];\n            }\n            else {\n                if (!current[keys[i]]) {\n                    throw new Error('No assets found for key `ASSETS.' + key + '`');\n                }\n                current = current[keys[i]];\n            }\n        }\n        if (!current) {\n            throw new Error('No assets found for key `ASSETS.' + key + '`');\n        }\n        return current;\n    }\n}\nconst ASSETS = new AssetsManager({\n    backgrounds: {},\n    battlers: {},\n    circles: {},\n    dice: {},\n    facesets: {},\n    fonts: {},\n    icons: {},\n    mapmaking: {\n        'ground': 'assets/mapmaking/ground-purple.png',\n        'exit': 'assets/mapmaking/exit.png',\n        'wall': 'assets/mapmaking/wall.png'\n    },\n    textures: {},\n    spritesheets: {\n        'mountain': 'assets/spritesheets/004-Mountain01.png',\n        'floor-paths': 'assets/spritesheets/floor-paths.png'\n    }\n});\nexports.ASSETS = ASSETS;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DGAudio = void 0;\nclass DGAudio {\n    constructor(src, audioClass = 'effect') {\n        this.src = src;\n        this.class = audioClass;\n        const parts = src.split('.');\n        const ext = parts[parts.length - 1];\n        this.type = 'audio/' + ext;\n        this.loadConfig();\n    }\n    play() {\n        try {\n            const audio = document.createElement('audio');\n            const audioId = 'audio-' + Date.now();\n            audio.setAttribute('id', audioId);\n            const source = document.createElement('source');\n            source.setAttribute('src', this.src);\n            source.setAttribute('type', this.type);\n            audio.appendChild(source);\n            const body = document.querySelector('body');\n            body.appendChild(audio);\n            const _audio = document.querySelector('#' + audioId);\n            if (!audio) {\n                return;\n            }\n            if (!audio['volume']) {\n                return;\n            }\n            console.log('_audio', _audio);\n            console.log('volume', this.class, this.src, this.config.volume[this.class]);\n            _audio.volume = this.config.volume.overall * this.config.volume[this.class];\n            _audio.onended = (() => {\n                _audio.parentNode.removeChild(_audio);\n            });\n            _audio.play().catch(console.warn);\n        }\n        catch (e) {\n            console.warn(e);\n        }\n    }\n    loadConfig() {\n        let config = localStorage.getItem('audio-config');\n        if (!config) {\n            config = {\n                volume: {\n                    overall: 1,\n                    music: 0.6,\n                    effect: 0.8\n                }\n            };\n            localStorage.setItem('audio-config', JSON.stringify(config));\n        }\n        else {\n            config = JSON.parse(config);\n        }\n        this.config = config;\n    }\n}\nexports.DGAudio = DGAudio;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Board = void 0;\nconst card_1 = require(\"./card\");\nconst events_1 = require(\"./events\");\nconst tutorial_1 = require(\"./tutorial\");\nconst audio_1 = require(\"./audio\");\nvar cell_1 = require(\"./cell\");\nObject.defineProperty(exports, \"Cell\", { enumerable: true, get: function () { return cell_1.Cell; } });\nclass Board {\n    constructor(ctx, rooms, \n    //cols: number,\n    //rows: number,\n    players, isTutorial) {\n        this.classes = {\n            PLAYER_TILE: 'player-tile',\n            PLAYER_CHAMPION: 'player-champion',\n            RIVAL_TILE: 'rival-tile',\n            NEUTRAL_TILE: 'neutral-tile',\n            RIVAL_CHAMPION: 'rival-champion',\n            WALL: 'wall-tile',\n            VICTORY: 'victory-tile',\n            PLAYER_TOWER: 'player-tower-hp-3',\n            RIVAL_TOWER: 'rival-tower-hp-3'\n        };\n        this.cardModalClasses = ['hidden'];\n        this.cursorClass = '';\n        this.roomNonce = 0;\n        this.players = {};\n        this.splashDisplay = 'flex';\n        this.turnNonce = 0;\n        this.pendingCard = new card_1.Card('', 'neutral', 0, 0, 0, ['neutral'], [], []);\n        this.events = events_1.EVENTS;\n        this.lastRoomNonce = -1;\n        this.visitedRoomNonces = [];\n        this.deckContainerClass = 'minimized';\n        const self = this;\n        this.ctx = ctx;\n        if (isTutorial) {\n            this.tutorial = new tutorial_1.Tutorial(players.red, players.blue);\n        }\n        this.events.on('freeCast', (payload) => {\n            self.freeCast(payload.card, payload.cell);\n        });\n        for (let i = 0; i < rooms.length; i++) {\n            rooms[i].setCtx(this.ctx);\n            rooms[i].paintMap();\n        }\n        this.rooms = rooms;\n        this.players.red = players.red;\n        this.players.blue = players.blue;\n        this.activeCard = this.players.red.deckCards[0];\n        //this.colors = ['red', 'blue']\n        //this.players = {}\n        /*\n            for (let i = 0; i < this.colors.length; i++) {\n              this.players[this.colors[i]] = opts.players[this.colors[i]]\n            }*/\n        this.listeners();\n    }\n    cardModal(card) {\n        this.activeCard = card;\n        if (this.cardModalClasses.indexOf('hidden') >= 0) {\n            this.cardModalClasses.splice(this.cardModalClasses.indexOf('hidden'), 1);\n        }\n        else {\n            this.cardModalClasses.push('hidden');\n        }\n    }\n    setCellsDoms() {\n        setTimeout(() => {\n            const keys = Object.keys(this.getActiveRoom().cells);\n            for (let i = 0; i < keys.length; i++) {\n                this.getActiveRoom().cells[keys[i]].attachDom();\n            }\n        }, 500);\n    }\n    getCell(x, y) {\n        return this.getActiveRoom().getCell(x, y);\n    }\n    getAvailableBtlNearby(x, y) {\n        const _cells = [];\n        const cells = [];\n        const top = this.getCell(x, y - 1);\n        const bottom = this.getCell(x, y + 1);\n        const left = this.getCell(x - 1, y);\n        const right = this.getCell(x + 1, y);\n        if (top) {\n            _cells.push(top);\n        }\n        if (bottom) {\n            _cells.push(bottom);\n        }\n        if (left) {\n            _cells.push(left);\n        }\n        if (right) {\n            _cells.push(right);\n        }\n        for (let i = 0; i < _cells.length; i++) {\n            if (_cells[i].hasClass('creature')\n            //_cells[i].classes.indexOf('not-map') < 0\n            //_cells[i].classes.indexOf('tile') >= 0\n            /*\n            && (\n              _cells[i].classes.indexOf('wall-tile') < 0 ||\n              _cells[i].classes.indexOf('available') >= 0\n            )*/\n            ) {\n                cells.push(_cells[i]);\n            }\n        }\n        return cells;\n    }\n    getAvailableMovNearby(x, y) {\n        const _cells = [];\n        const cells = [];\n        const top = this.getCell(x, y - 1);\n        const bottom = this.getCell(x, y + 1);\n        const left = this.getCell(x - 1, y);\n        const right = this.getCell(x + 1, y);\n        if (top) {\n            _cells.push(top);\n        }\n        if (bottom) {\n            _cells.push(bottom);\n        }\n        if (left) {\n            _cells.push(left);\n        }\n        if (right) {\n            _cells.push(right);\n        }\n        for (let i = 0; i < _cells.length; i++) {\n            if (_cells[i].hasClass('floor') &&\n                !_cells[i].hasClass('wall') &&\n                !_cells[i].hasClass('creature')\n            //_cells[i].classes.indexOf('not-map') < 0\n            //_cells[i].classes.indexOf('tile') >= 0\n            /*\n            && (\n              _cells[i].classes.indexOf('wall-tile') < 0 ||\n              _cells[i].classes.indexOf('available') >= 0\n            )*/\n            ) {\n                cells.push(_cells[i]);\n            }\n        }\n        return cells;\n    }\n    getAvailableUnfoldNearby(cell) {\n        const _cells = [];\n        const cells = [];\n        const top = this.getCell(cell.x, cell.y - 1);\n        const bottom = this.getCell(cell.x, cell.y + 1);\n        const left = this.getCell(cell.x - 1, cell.y);\n        const right = this.getCell(cell.x + 1, cell.y);\n        if (top) {\n            _cells.push(top);\n        }\n        if (bottom) {\n            _cells.push(bottom);\n        }\n        if (left) {\n            _cells.push(left);\n        }\n        if (right) {\n            _cells.push(right);\n        }\n        for (let i = 0; i < _cells.length; i++) {\n            if (!_cells[i].hasClass('floor') &&\n                !_cells[i].hasClass('wall') &&\n                !_cells[i].hasClass('creature')\n            /*\n            _cells[i].classes.indexOf('tile') < 0 ||\n            _cells[i].classes.indexOf('available') >= 0\n            */\n            ) {\n                cells.push(_cells[i]);\n            }\n        }\n        return cells;\n    }\n    getAvailableCstNearby(player, initialCells) {\n        const _cells = [];\n        const cells = [];\n        for (let i = 0; i < initialCells.length; i++) {\n            const cell = initialCells[i];\n            const top = this.getCell(cell.x, cell.y - 1);\n            const bottom = this.getCell(cell.x, cell.y + 1);\n            const left = this.getCell(cell.x - 1, cell.y);\n            const right = this.getCell(cell.x + 1, cell.y);\n            if (top) {\n                _cells.push(top);\n            }\n            if (bottom) {\n                _cells.push(bottom);\n            }\n            if (left) {\n                _cells.push(left);\n            }\n            if (right) {\n                _cells.push(right);\n            }\n        }\n        console.log('initialCells', initialCells);\n        console.log('_cells', _cells);\n        for (let i = 0; i < _cells.length; i++) {\n            if (!_cells[i].hasClass('floor') &&\n                !_cells[i].hasClass('wall') &&\n                !_cells[i].hasClass('creature')\n            /*\n            _cells[i].classes.indexOf('tile') < 0 ||\n            _cells[i].classes.indexOf('available') >= 0\n            */\n            ) {\n                cells.push(_cells[i]);\n            }\n        }\n        console.log('cells', cells);\n        return cells;\n    }\n    sleep(ms = 100) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve();\n            }, ms);\n        });\n    }\n    getCellsByClass(_class) {\n        const cells = [];\n        const keys = Object.keys(this.getActiveRoom().cells);\n        for (let i = 0; i < keys.length; i++) {\n            const cell = this.getActiveRoom().cells[keys[i]];\n            if (cell.hasClass(_class)) {\n                cells.push(cell);\n            }\n        }\n        return cells;\n    }\n    removeClassFromCells(_class) {\n        const cells = [];\n        const keys = Object.keys(this.getActiveRoom().cells);\n        for (let i = 0; i < keys.length; i++) {\n            const cell = this.getActiveRoom().cells[keys[i]];\n            if (cell.hasClass(_class) >= 0) {\n                cell.rmClass(_class);\n                cell.dom.classList.remove(_class);\n            }\n        }\n        //await this.sleep()\n        //return cells\n    }\n    castBg(player, card) {\n        if (card.canBeCasted(player.energyPool)) {\n            const possibleCells = this.getPossibleFirstCstCells(player);\n            if (possibleCells.length > 0) {\n                const possibles = this.getAvailableCstNearby(player, possibleCells);\n                for (let i = 0; i < possibles.length; i++) {\n                    possibles[i].addClass('possible-cast-tile');\n                    possibles[i].canBeClicked = true;\n                }\n                this.deckContainerClass = 'minimized';\n                player.isCastPending = true;\n                this.pendingCard = card;\n                this.events.emit('castBg', { player, card });\n                const sound = new audio_1.DGAudio('assets/audio/castBg.wav');\n                sound.play();\n            }\n            else {\n                // notify?\n            }\n        }\n    }\n    getPossibleFirstCstCells(player) {\n        console.log('cst', player);\n        let playerTile = 'player-tile';\n        if (this.isRival(player)) {\n            playerTile = 'rival-tile';\n        }\n        const _cells = this.getCellsByClass(playerTile);\n        const cells = [];\n        console.log('cst', _cells);\n        for (let i = 0; i < _cells.length; i++) {\n            console.log('cst', _cells[i].classes);\n            if (!_cells[i].hasClass('creature')) {\n                cells.push(_cells[i]);\n            }\n        }\n        console.log('cst', cells);\n        return cells;\n    }\n    /*\n      getAvailableNearbyPlayer(player:Player){\n        let _class = ''\n        if (player.name === this.players.red.name){\n          // player\n          _class = 'player-tile'\n        } else {\n          // rival\n          _class = 'rival-tile'\n    \n        }\n    \n        const nearby = []\n        const cells = this.getActiveRoom().getCells()\n        const keys = Object.keys(cells)\n    \n        for (let i = 0; i < keys.length; i++) {\n          const parts = keys[i].split(':')\n          const x = Number(parts[0])\n          const y = Number(parts[1])\n    \n          const cell = this.getCell(x, y)\n    \n          const classes = cell.classes\n    \n          if (classes.indexOf(_class) >= 0){\n            const _nearby = this.getAvailableCstNearby(cell.x, cell.y)\n    \n            for (let j = 0; j < _nearby.length; j++){\n              _nearby[j].addClass('possible-cast-tile')\n              _nearby[j].canBeClicked = true\n              nearby.push(_nearby[j])\n            }\n          }\n        }\n    \n    \n    \n    \n      }*/\n    isRival(player) {\n        if (player.name === this.players.red.name) {\n            return false;\n        }\n        return true;\n    }\n    clearClass(_class) {\n        this.getActiveRoom().clearClass(_class);\n    }\n    getOffset(card, cell) {\n        if (!cell.dom) {\n            cell.attachDom();\n        }\n        const el = cell.dom;\n        if (!el) {\n            return { x: 0, y: 0 };\n        }\n        let x = 0;\n        let y = 0;\n        x = el.offsetLeft - el.scrollLeft;\n        y = el.offsetTop - el.scrollTop;\n        x = x - 18 + card.offset.x;\n        y = y - 43 + card.offset.y;\n        return { y, x };\n    }\n    teleport(card, cell) {\n        // like a free moveBg/moveFn\n        const offset = this.getOffset(card, cell);\n        //card.setOwner(isPlayer)\n        card.x = offset.x;\n        card.y = offset.y;\n        card.cell = cell;\n    }\n    freeCast(card, cell) {\n        //console.log('freeCast', card, cell)\n        if (!this.players.blue) {\n            return;\n        }\n        let idx = -1;\n        for (let i = 0; i < this.players.blue.boardCards.length; i++) {\n            if (this.players.blue.boardCards[i].id === card.id) {\n                idx = i;\n            }\n        }\n        if (idx >= 0) {\n            this.players.blue.boardCards.splice(idx, 1);\n        }\n        const offset = this.getOffset(card, cell);\n        //card.setOwner(isPlayer)\n        card.x = offset.x;\n        card.y = offset.y;\n        card.cell = cell;\n        this.players.blue.boardCards.push(card);\n    }\n    castFn(player, cell) {\n        const card = this.pendingCard;\n        card.canBeClicked = false;\n        cell.addClass('creature');\n        card.cell = cell;\n        let idx = -1;\n        for (let i = 0; i < player.deckCards.length; i++) {\n            if (player.deckCards[i].id === card.id) {\n                idx = i;\n            }\n        }\n        player.deckCards.splice(idx, 1);\n        player.boardCards.push(card);\n        const offset = this.getOffset(card, cell);\n        //card.setOwner(isPlayer)\n        card.x = offset.x;\n        card.y = offset.y;\n        card.boardStats.mov = card.mov;\n        card.boardStats.btl = card.btl;\n        card.boardStats.vit = card.vit;\n        const cells = this.getActiveRoom().getCells();\n        const keys = Object.keys(cells);\n        for (let i = 0; i < keys.length; i++) {\n            if (cells[keys[i]].hasClass('possible-cast-tile')) {\n                cells[keys[i]].rmClass('possible-cast-tile');\n                cells[keys[i]].canBeClicked = false;\n            }\n        }\n        this.getActiveRoom().clearClass('possible-cast-tile');\n        //cell.addClass('player-tile')\n        //cell.canBeClicked = false\n        player.isCastPending = false;\n        player.isUnfoldPending = true;\n        player.unfoldCounter = 6;\n        player.hasCasted = true;\n        // player.increaseScore(card.cost * 100)\n        for (let j = 0; j < player.deckCards.length; j++) {\n            player.deckCards[j].canCast = false;\n        }\n        for (let j = 0; j < player.boardCards.length; j++) {\n            player.boardCards[j].canCast = false;\n        }\n        this.events.emit('castFn', { player, card, cell });\n        this.unfold(player, cell);\n    }\n    clearClickAreas() {\n        this.getActiveRoom().clearClickAreas();\n    }\n    unfold(player, cell) {\n        if (!player.isUnfoldPending) {\n            return;\n        }\n        if (player.unfoldCounter <= 0) {\n            return;\n        }\n        this.clearClass('possible-unfold-tile');\n        cell.addClass('floor');\n        cell.rmClass('');\n        /*\n        let cursorClass = 'cursor-' + (player.unfoldCounter - 1)\n        if (player.unfoldCounter > 8){\n          cursorClass = 'cursor-plus-9'\n        }\n        this.cursorClass = cursorClass\n        */\n        player.unfoldCounter--;\n        if (player.unfoldCounter === 0) {\n            player.isUnfoldPending = false;\n        }\n        let tile = 'player-tile';\n        if (this.isRival(player)) {\n            tile = 'rival-tile';\n        }\n        this.clearClickAreas();\n        cell.addClass(tile);\n        const cells = this.getAvailableUnfoldNearby(cell);\n        for (let i = 0; i < cells.length; i++) {\n            if (player.isUnfoldPending) {\n                cells[i].addClass('possible-unfold-tile');\n                cells[i].canBeClicked = true;\n            }\n        }\n        if (!player.isUnfoldPending) {\n            this.clearClass('possible-unfold-tile');\n            this.pendingCard.canBeClicked = true;\n            //this.pendingCard.\n            //this.pendingCard = null\n        }\n        this.events.emit('unfold', {\n            counter: player.unfoldCounter,\n            player, cell\n        });\n    }\n    getAllBoardCards() {\n        const cards = [];\n        const keys = Object.keys(this.players);\n        for (let i = 0; i < keys.length; i++) {\n            const boardCards = this.players[keys[i]].boardCards;\n            for (let j = 0; j < boardCards.length; j++) {\n                cards.push(boardCards[j]);\n            }\n        }\n        return cards;\n    }\n    moveBg(player, card, start = false) {\n        if (card.hasMoved) {\n            return;\n        }\n        // assign the number of pending move tiles just like with unfolding\n        // reflect on cursor\n        // highlight possible next tile\n        // on click creature moves to the clicked tile.\n        if (start) {\n            player.isMovePending = true;\n            player.moveCounter = card.mov;\n            this.pendingCard = card;\n            card.canBeClicked = false;\n            this.events.emit('moveBg', { player, card, cell: card.cell });\n            // disable clicks for ya'll!\n            let cards = this.getAllBoardCards();\n            for (let i = 0; i < cards.length; i++) {\n                cards[i].canBeClicked = false;\n            }\n            // player.edgePool.mov -= card.cost\n        }\n        else {\n            card.cell.addClass('creature');\n            this.events.emit('moveStep', { player, card, cell: card.cell });\n        }\n        if (!start && !player.isMovePending && player.moveCounter === 0) {\n            card.hasMoved = true;\n            card.canBeClicked = true;\n            let cards = this.getAllBoardCards();\n            for (let i = 0; i < cards.length; i++) {\n                cards[i].canBeClicked = true;\n            }\n            this.events.emit('moveFn', { player, card, cell: card.cell });\n        }\n        this.cursorClass = 'cursor-0';\n        if (!player.isMovePending) {\n            return;\n        }\n        if (player.moveCounter <= 0) {\n            return;\n        }\n        this.clearClass('possible-move-tile');\n        player.moveCounter--;\n        this.clearClickAreas();\n        const cells = this.getAvailableMovNearby(card.cell.x, card.cell.y);\n        console.log('available for mov::', cells);\n        for (let i = 0; i < cells.length; i++) {\n            if (player.isMovePending) {\n                cells[i].addClass('possible-move-tile');\n                cells[i].canBeClicked = true;\n            }\n        }\n    }\n    moveFn(player, cell) {\n        if (!player.isMovePending) {\n            return;\n        }\n        if (player.moveCounter === 0) {\n            player.isMovePending = false;\n        }\n        const card = this.pendingCard;\n        const offset = this.getOffset(card, cell);\n        card.cell.rmClass('creature');\n        card.cell = cell;\n        card.x = offset.x;\n        card.y = offset.y;\n        this.clearClass('possible-move-tile');\n        //this.events.emit('moveFn', {player, card, cell})\n        this.moveBg(player, card);\n        // check if the moved-to tile is a tower.\n        // in case it is, check if own or enemy.\n        // if own, the monster loses (delete) their MOV attribute\n        // VIT gets +10\n        // if opponent, monster's vitality is taken to 0.\n        // opponent's tower is destroyed and it's path, on a cross, destroyed.\n        // reflect somehow these changes on the overall counters.\n        // score is good for cumulative but info on how many\n        // towers are taken and by whom is important\n        // also trigger the board's self-collector for conquered tower.\n        // from left to right, they provide the monster's cost every turn\n        // in MOV, BTL and HEX\n    }\n    battleBg(player, card) {\n        // if (player.edgePool.btl < card.cost){return}\n        console.log('battleBg', player, card);\n        player.isBattlePending = true;\n        card.canBeClicked = false;\n        const cells = this.getAvailableBtlNearby(card.cell.x, card.cell.y);\n        for (let i = 0; i < cells.length; i++) {\n            if (player.isBattlePending) {\n                cells[i].addClass('possible-battle-tile');\n                cells[i].canBeClicked = true;\n            }\n        }\n        const boardCards = this.getAllBoardCards();\n        for (let i = 0; i < boardCards.length; i++) {\n            const currentCard = boardCards[i];\n            currentCard.canBeClicked = true;\n        }\n        this.pendingCard = card;\n    }\n    cancelMove(player, card) {\n        player.isMovePending = false;\n        card.hasMoved = true;\n        card.canBeClicked = true;\n        this.clearClass('possible-move-tile');\n        this.clearClickAreas();\n        let cards = this.getAllBoardCards();\n        for (let i = 0; i < cards.length; i++) {\n            cards[i].canBeClicked = true;\n        }\n    }\n    cancelBattle(player, card) {\n        player.isBattlePending = false;\n        card.hasBattled = true;\n        card.canBeClicked = true;\n        this.clearClass('possible-battle-tile');\n        this.clearClickAreas();\n    }\n    battleFn(player, targetCard) {\n        console.log('battleFn', player, targetCard);\n        if (!player.isBattlePending) {\n            return;\n        }\n        const sourceCard = this.pendingCard;\n        sourceCard.canBeClicked = true;\n        targetCard.boardStats.vit -= sourceCard.boardStats.btl;\n        if (targetCard.boardStats.vit <= 0) {\n            // died!\n            let idx;\n            for (let i = 0; i < this.players.blue.boardCards.length; i++) {\n                if (this.players.blue.boardCards[i].id === targetCard.id) {\n                    idx = i;\n                }\n            }\n            targetCard.cell.rmClass('creature');\n            this.getActiveRoom().getCell(targetCard.cell.x, targetCard.cell.y).rmClass('creature');\n            this.players.red.deckCards.push(targetCard);\n            this.players.blue.boardCards.splice(idx, 1);\n        }\n        sourceCard.hasBattled = true;\n        player.isBattlePending = false;\n        this.clearClass('possible-battle-tile');\n        this.clearClickAreas();\n        //player.edgePool.btl -= card.cost\n        // need to grab the opponent monster, somehow\n        // cell cannot contain card since that's circular\n        // make fn to extract cells of all creatures in opponent's board\n        // check cell coordinates with given creature's locations.\n        // need to implement opponent cast for this!\n        // fml. hammer(ed) time\n    }\n    hexBg() { }\n    hexFn() { }\n    endTurn(player) {\n        const self = this;\n        this.cursorClass = 'cursor-0';\n        this.clearClass('possible-cast-tile');\n        this.clearClass('possible-unfold-tile');\n        this.clearClass('possible-move-tile');\n        if (this.isRival(player)) {\n            this.players.blue.endTurn();\n            this.players.red.startTurn();\n        }\n        else {\n            // user finishes turn, automate stuff\n            this.players.red.endTurn();\n            this.events.on('endCpuTurn', (stc) => {\n                self.endTurn(self.players.blue);\n                console.log('event dispatched for cpu turn end');\n            });\n            this.players.blue.startTurn();\n        }\n        // check if a closed area has been created. If that's the case, color it\n    }\n    getActiveRoom() {\n        if (this.roomNonce !== this.lastRoomNonce) {\n            this.lastRoomNonce = this.roomNonce;\n            this.activeRoom = this.rooms[this.roomNonce];\n            this.activeRoom.paintMap();\n        }\n        return this.activeRoom;\n    }\n    listeners() {\n        const self = this;\n        this.events.on('castBg', (payload) => {\n            const card = payload.card;\n            const player = payload.player;\n            let costs = {};\n            for (let i = 0; i < card.cost.length; i++) {\n                const cost = card.cost[i];\n                if (!costs[cost]) {\n                    costs[cost] = 0;\n                }\n                costs[cost] += 1;\n            }\n            const keys = Object.keys(costs);\n            for (let i = 0; i < keys.length; i++) {\n                const attr = keys[i];\n                const cost = costs[attr];\n                player.energyPool.burn(attr, cost);\n            }\n        });\n        this.events.on('roomFinished', () => {\n            self.nextRoom();\n        });\n    }\n    nextRoom() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.visitedRoomNonces.indexOf(this.roomNonce) >= 0) {\n                return;\n            }\n            this.splashDisplay = 'flex';\n            yield this.sleep(100);\n            console.log('nextRoom', this.roomNonce, this.rooms);\n            if (this.roomNonce < this.rooms.length) {\n                this.roomNonce++;\n            }\n            else {\n                this.roomNonce = 0;\n            }\n            this.visitedRoomNonces.push(this.roomNonce);\n            this.getActiveRoom();\n            yield this.sleep(100);\n            //for (let i = 0; i < this.players.red.boardCards.length){\n            const card = this.players.red.boardCards[0]; //i]\n            const cell = this.getActiveRoom().getCell(this.getActiveRoom().initialTile.x, this.getActiveRoom().initialTile.y);\n            this.teleport(card, cell);\n            yield this.sleep(100);\n            this.getActiveRoom().paintMap();\n            this.endTurn(this.players.red);\n            yield this.sleep(300);\n            this.splashDisplay = 'hidden';\n        });\n    }\n    toggleDeckView() {\n        const sound = new audio_1.DGAudio('assets/audio/deck-view.mp3');\n        sound.play();\n        console.log('toggleDeckView');\n        if (this.deckContainerClass === 'full') {\n            this.deckContainerClass = 'minimized';\n        }\n        else {\n            this.deckContainerClass = 'full';\n        }\n    }\n}\nexports.Board = Board;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Card = exports.costToCircles = exports.attributesToBackgrounds = void 0;\nconst board_1 = require(\"./board\");\nconst player_1 = require(\"./player\");\nconst uuid_1 = require(\"uuid\");\nconst js_sha3_1 = require(\"js-sha3\");\nexports.attributesToBackgrounds = {\n    light: 'assets/backgrounds/light.jpg',\n    dark: 'assets/backgrounds/dark.jpg',\n    aether: 'assets/backgrounds/aether.jpg',\n    void: 'assets/backgrounds/void.jpg',\n    earth: 'assets/backgrounds/earth.jpg',\n    air: 'assets/backgrounds/air.jpg',\n    water: 'assets/backgrounds/water.jpg',\n    fire: 'assets/backgrounds/fire.jpg',\n    wood: 'assets/backgrounds/wood.jpg',\n    metal: 'assets/backgrounds/metal.jpg',\n    electric: 'assets/backgrounds/electric.jpg',\n    ice: 'assets/backgroungs/ice.jpg'\n};\nexports.costToCircles = [\n    'assets/circles/00.png',\n    'assets/circles/01.png',\n    'assets/circles/04.png',\n    'assets/circles/02.png',\n    'assets/circles/07.png',\n    'assets/circles/00.png',\n    'assets/circles/05.png',\n];\nclass Card {\n    constructor(title, \n    //backgroundUrl: string,\n    //battlerUrl: string,\n    //circleUrl: string,\n    attribute, mov, btl, vit, cost, abilities, clans, offset) {\n        this.owner = player_1.EMPTY_PLAYER;\n        this.offset = {\n            x: 0,\n            y: 0\n        };\n        this.boardStats = {\n            btl: 0,\n            mov: 0,\n            vit: 0,\n            rng: 1\n        };\n        this.canCast = false;\n        this.canMove = false;\n        this.canBattle = false;\n        this.cell = new board_1.Cell({});\n        this.activeAbility = {};\n        this.showAbility = false;\n        this.hasMoved = false;\n        this.hasBattled = false;\n        this.canBeClicked = true;\n        this.showMenu = false;\n        this.title = title;\n        this.backgroundUrl = exports.attributesToBackgrounds[attribute];\n        this.battlerUrl = this.getBattlerUrl(); //battlerUrl\n        this.circleUrl = this.getCircleUrl();\n        this.attribute = attribute;\n        if (offset) {\n            this.offset = offset;\n        }\n        this.btl = btl;\n        this.cost = cost;\n        this.mov = mov;\n        this.vit = vit;\n        this.boardStats.btl = btl;\n        this.boardStats.mov = mov;\n        this.boardStats.vit = vit;\n        this.id = js_sha3_1.keccak256(uuid_1.v4());\n        this.coordinates = [];\n        this.x = 0;\n        this.y = 0;\n        // this.cell = new Cell(this.ctx)\n        // this.owner = new Player(this.ctx)\n        this.classes = ['_card'];\n        this.abilities = [];\n        for (let i = 0; i < abilities.length; i++) {\n            const ability = abilities[i];\n            ability['hidden'] = 'hidden';\n            ability['id'] = this.id + '-' + ability['name'];\n            this.abilities.push(ability);\n        }\n        this.clans = clans;\n    }\n    getAttributeFromCost(cost) {\n        const parts = cost.split('-');\n        return parts[0];\n    }\n    getValueFromCost(cost) {\n        const parts = cost.split('-');\n        return Number(parts[1]);\n    }\n    getNumericTotalCost(costs) {\n        return costs.length;\n    }\n    getBattlerUrl() {\n        const title = this.title;\n        let lowercase = title.toLowerCase();\n        let parts = lowercase.split(' ');\n        let url = 'assets/battlers/';\n        url += this.attribute;\n        url += '/';\n        url += parts.join('-');\n        url += '.png';\n        return url;\n    }\n    getCircleUrl() {\n        if (!this.cost) {\n            return '';\n        }\n        const totalCost = this.getNumericTotalCost(this.cost);\n        return exports.costToCircles[totalCost];\n    }\n    setOwner(player) { this.owner = player; }\n    canBeCasted(energyPool) {\n        let out = true;\n        let costs = {};\n        for (let i = 0; i < this.cost.length; i++) {\n            const cost = this.cost[i];\n            if (!costs[cost]) {\n                costs[cost] = 0;\n            }\n            costs[cost] += 1;\n        }\n        const keys = Object.keys(costs);\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            out = out && (Number(energyPool.get(key)) >= costs[key]);\n        }\n        return out;\n    }\n    getVitPercent() {\n        return Math.round(100 * this.boardStats.vit / this.vit);\n    }\n}\nexports.Card = Card;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cell = void 0;\nclass Cell {\n    constructor(opts) {\n        // number --> x\n        // letter --> y\n        this.canBeClicked = false;\n        this.src = '';\n        this.domReadyQueue = [];\n        this.domReadyQueueProcessing = false;\n        this.classes = [];\n        this.ctx = opts.ctx;\n        this.x = opts.x;\n        this.y = opts.y;\n        this.domPrefix = opts.domPrefix;\n        this.attachDom();\n    }\n    addClass(newClass) {\n        if (!this.hasClass(newClass)) {\n            this.classes.push(newClass);\n        }\n    }\n    rmClass(newClass) {\n        if (!this.hasClass(newClass))\n            return;\n        this.classes.splice(this.classes.indexOf(newClass), 1);\n        if (!this.dom) {\n            this.attachDom();\n        }\n        if (this.dom && this.dom.classList.contains(newClass)) {\n            this.dom.classList.remove(newClass);\n        }\n    }\n    hasClass(newClass) {\n        return (this.classes.indexOf(newClass) >= 0);\n    }\n    canClick(state) {\n        this.canBeClicked = state;\n    }\n    attachDom() {\n        this.dom = document.querySelector('.' + this.domPrefix + 'x-' + this.x + '-y-' + this.y);\n        this.processDomReadyQueue();\n    }\n    click(player) {\n        if (!this.canBeClicked) {\n            return;\n        }\n        this.ctx.board.unfold(player, this);\n        this.ctx.board.moveFn(player, this);\n        //this.ctx.board.battleFn(player, this)\n        if (player.isCastPending && this.classes.indexOf('possible-cast-tile') >= 0) {\n            this.ctx.board.castFn(player, this);\n        }\n    }\n    setBackgroundImage(src) {\n        this.src = src;\n    }\n    setCtx(ctx) {\n        this.ctx = ctx;\n        this.attachDom();\n    }\n    processDomReadyQueue() {\n        if (this.domReadyQueueProcessing) {\n            return;\n        }\n        if (this.domReadyQueue.length === 0) {\n            this.domReadyQueueProcessing = false;\n            return;\n        }\n        this.domReadyQueueProcessing = true;\n        const item = this.domReadyQueue[0];\n        item.fn.apply(this, item.params);\n        this.domReadyQueue.unshift();\n        this.processDomReadyQueue();\n    }\n    queueAfterDom(fn, params) {\n        if (!this.dom) {\n            return this.domReadyQueue.push({ fn, params });\n        }\n        this.processDomReadyQueue();\n    }\n    setSprite(sprite) {\n        this.sprite = sprite;\n        //sprite.setSelector()\n    }\n    equals(cell) {\n        return (this.x === cell.x && this.y === cell.y && this.domPrefix === cell.domPrefix);\n    }\n}\nexports.Cell = Cell;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_BLUE = exports.DEFAULT_RED = exports.cardCollection = void 0;\nconst card_1 = require(\"./card\");\nconst CLANS = {\n    warrior: {\n        name: 'Warrior',\n        iconUrl: 'assets/icons/warrior.png'\n    },\n    swordAdept: {\n        name: 'Sword Adept',\n        iconUrl: 'assets/icons/swordAdept.png'\n    },\n    armorAdept: {\n        name: 'Armor Adept',\n        iconUrl: 'assets/icons/armorAdept.png'\n    },\n    royalGuard: {\n        name: 'Royal Guard',\n        iconUrl: 'assets/icons/royalGuard.png'\n    },\n    archer: {\n        name: 'Archer',\n        iconUrl: 'assets/icons/archer.png'\n    },\n    forestGuard: {\n        name: 'Forest Guard',\n        iconUrl: 'assets/icons/forest-guard.png'\n    },\n};\nconst ABILITIES = {\n    decast2: {\n        name: 'decast2',\n        iconUrl: 'assets/icons/decast.png',\n        cost: 2,\n        text: 'Decast: Returns the monster from the board to the deck at cost 2xHEX'\n    },\n    decast4: {\n        name: 'decast4',\n        iconUrl: 'assets/icons/decast.png',\n        cost: 4,\n        text: 'Decast: Returns the monster from the board to the deck at cost 4xHEX'\n    },\n    decast6: {\n        name: 'decast6',\n        iconUrl: 'assets/icons/decast.png',\n        cost: 6,\n        text: 'Decast: Returns the monster from the board to the deck at cost 6xHEX'\n    },\n    doubleStrike: {\n        name: 'doubleStrike',\n        iconUrl: 'assets/icons/double-strike.png',\n        cost: 2,\n        text: 'Double Strike: On every battle phase this creature can attack a second time'\n    },\n    midRange: {\n        name: 'midRange',\n        iconUrl: 'assets/icons/mid-range.png',\n        cost: 0,\n        text: 'Mid Range: This card\\'s range receives +3'\n    },\n    fly: {\n        name: 'fly',\n        iconUrl: 'assets/icons/fly.png',\n        cost: 1,\n        text: 'Fly: The creature can move from a tile to another without stepping on dungeon path.'\n    },\n    mortalTouch: {\n        name: 'mortalTouch',\n        iconUrl: 'assets/icons/mortalTouch.png',\n        cost: 3,\n        text: 'Mortal Strike: An opponent battling this creature dies automatically'\n    },\n    mortalStrike: {\n        name: 'mortalStrike',\n        iconUrl: 'assets/icons/mortalStrike.png',\n        cost: 5,\n        text: 'Mortal Strike: An opponent battling this creature dies automatically'\n    },\n    forestForce: {\n        name: 'forestForce',\n        iconUrl: 'assets/icons/forestForce.png',\n        cost: 0,\n        text: 'Forest Force: As long as there is another `Wood` creature under your control this card gains BTL +3'\n    },\n    cannotBattle: {\n        name: 'cannotBattle',\n        iconUrl: 'assets/icons/cannotBattle.png',\n        cost: 0,\n        text: 'Cannot Battle: This creature cannot attack an opponent'\n    },\n    cannotMove: {\n        name: 'cannotMove',\n        iconUrl: 'assets/icons/cannotBattle.png',\n        cost: 0,\n        text: 'Cannot Move: This creature cannot move'\n    },\n    doubleMove: {\n        name: 'doubleMove',\n        iconUrl: 'assets/icons/doubleMove.png',\n        cost: 3,\n        text: 'Double Move: This creature can move a second time every turn'\n    },\n    defender: {\n        name: 'defender',\n        iconUrl: 'assets/icons/defender.png',\n        cost: 5,\n        text: 'Defender: This creature can intercept an attack on a fellow on the same Dungeon Path'\n    },\n    layEgg: {\n        name: 'layEgg',\n        iconUrl: 'assets/icons/layEgg.png',\n        cost: 5,\n        text: 'Lay Egg: The creature can sacrifice itself to be recasted'\n    },\n    energyEconomy: {\n        name: 'energyEconomy',\n        iconUrl: 'assets/icons/energyEconomy.png',\n        cost: 5,\n        text: 'Energy Economy: Convert all your Energy from one type into another, except CST'\n    },\n    reRollOne: {\n        name: 'reRollOne',\n        iconUrl: 'assets/icons/reRollOne.png',\n        cost: 5,\n        text: 'Re Roll One: You can roll again one of your dice on the Roll Stage'\n    },\n    creatureHealer: {\n        name: 'creatureHealer',\n        iconUrl: 'assets/icons/creatureHealer.png',\n        cost: 7,\n        text: 'Creature Healer: Restore the max VIT of a fellow in the same Dungeon Path'\n    },\n    woodToken: {\n        name: 'woodToken',\n        iconUrl: 'assets/icons/woodToken.png',\n        cost: 10,\n        text: 'Wood Token: Create a 1/1/1 clanless Wood Token'\n    },\n    farSight: {\n        name: 'farSight',\n        iconUrl: 'assets/icons/farSight.png',\n        cost: 7,\n        text: 'Far Sight: This creature\\'s range becomes +10 until the end of the turn'\n    },\n    airToken: {\n        name: 'airToken',\n        iconUrl: 'assets/icons/airToken.png',\n        cost: 10,\n        text: 'Air Token: Create a 1/1/1 clanless Air Token'\n    },\n    wingUp: {\n        name: 'wingUp',\n        iconUrl: 'assets/icons/wingUp.png',\n        cost: 15,\n        text: 'Wing Up: Give the ability `Fly` to any creature in the same Dungeon Path'\n    },\n    lightToken: {\n        name: 'lightToken',\n        iconUrl: 'assets/icons/lightToken.png',\n        cost: 10,\n        text: 'Light Token: Create a 1/1/1 `light-worshiper` Light Token'\n    },\n    lightTouch: {\n        name: 'lightTouch',\n        iconUrl: 'assets/icons/lightTouch.png',\n        cost: 5,\n        text: 'Light Touch: All Light creatures gain permanent +5 on BTL'\n    },\n    changeOfHeart: {\n        name: 'changeOfHeart',\n        iconUrl: 'assets/icons/changeOfHeart.png',\n        cost: 15,\n        text: 'Change of Heart: Take control of an opponent creature until your next Roll Stage'\n    },\n    darkToken: {\n        name: 'darkToken',\n        iconUrl: 'assets/icons/darkToken.png',\n        cost: 10,\n        text: 'Dark Token: Create a 1/1/1 `dark-worshiper` Dark Token'\n    },\n    darkTouch: {\n        name: 'darkTouch',\n        iconUrl: 'assets/icons/darkTouch.png',\n        cost: 5,\n        text: 'Dark Touch: All Dark creatures gain permanent +5 on BTL'\n    },\n    poisonGas: {\n        name: 'poisonGas',\n        iconUrl: 'assets/icons/poisonGas.png',\n        cost: 7,\n        text: 'Poison Gas: All creatures on the same color Dungeon Path receive -1 VIT every Roll Stage of their controller'\n    },\n    voidToken: {\n        name: 'voidToken',\n        iconUrl: 'assets/icons/voidToken.png',\n        cost: 10,\n        text: 'Void Token: Create a 1/1/1 `void-worshiper` Void Token'\n    },\n    voidTouch: {\n        name: 'voidTouch',\n        iconUrl: 'assets/icons/voidTouch.png',\n        cost: 5,\n        text: 'Void Touch: All Void creatures gain permanent +5 on BTL'\n    },\n    darkHole: {\n        name: 'darkHole',\n        iconUrl: 'assets/icons/darkHole.png',\n        cost: 7,\n        text: 'Dark Hole: Create a Dark Hole on a Dungeon Path 5 tiles away or closer. All creatures 3 tiles from the Hole will be sucked in and destroyed automatically.'\n    },\n    aetherToken: {\n        name: 'aetherToken',\n        iconUrl: 'assets/icons/aetherToken.png',\n        cost: 10,\n        text: 'Aether Token: Create a 1/1/1 `aether-worshiper` Aether Token'\n    },\n    aetherTouch: {\n        name: 'aetherTouch',\n        iconUrl: 'assets/icons/aetherTouch.png',\n        cost: 5,\n        text: 'Aether Touch: All Aether creatures gain permanent +5 on BTL'\n    },\n    fluidDivision: {\n        name: 'fluidDivision',\n        iconUrl: 'assets/icons/fluidDivision.png',\n        cost: 7,\n        text: 'Fluid Division: While this card\\'s MOV is greater than 1; you can split this creature on neighbour Dungeon Paths into 2 clones of this card, each holding half it\\'s MOV, BTL and VIT. Abilities cost 2x the HEX to activate on the clones'\n    },\n    infestation: {\n        name: 'infestation',\n        iconUrl: 'assets/icons/infestation.png',\n        cost: 5,\n        text: 'Infestation: Sacrifice a creature in the same Dungeon Path; Cast 2 `Plague Termite` in the available nearby tiles.'\n    },\n};\nexports.cardCollection = {\n    'thunder-warlord': new card_1.Card('Thunder Warlord', 'electric', 0, 0, 0, ['electric'], // cost\n    [], // abilities\n    [] // clans\n    ),\n    'reeya-mermaid-of-chaos': new card_1.Card('Reeya Mermaid of Chaos', 'water', 1, 1, 3, ['water'], // cost\n    [], // abilities\n    [] // clans\n    ),\n    'sea-wolf-lobstroslly': new card_1.Card('Sea Wolf Lobstroslly', 'water', 4, 4, 12, ['water', 'water'], // cost\n    [], // abilities\n    [], // clans\n    { x: 12, y: 0 }),\n    'swamp-nix': new card_1.Card('Swamp Nix', 'water', 12, 12, 36, ['water', 'water', 'water'], // cost\n    [], // abilities\n    [], // clans,\n    { x: 7, y: 0 }),\n    'fluid-elemental': new card_1.Card('Fluid Elemental', 'water', 3, 3, 10, ['water', 'water'], // cost\n    [\n        ABILITIES.defender,\n    ], // abilities\n    [] // clans\n    ),\n    'doffet-the-war-platypus': new card_1.Card('Doffet The War Platypus', 'water', 7, 6, 13, ['water', 'water', 'water'], // cost\n    [], [], { x: -2, y: 0 }),\n    'war-moose': new card_1.Card('War Moose', 'wood', 7, 8, 15, ['wood', 'wood', 'wood'], // 263\n    [], [], { x: 18, y: 0 } // offset\n    ),\n    'plague-termite': new card_1.Card('Plague Termite', 'wood', 3, 3, 5, ['wood', 'wood'], [\n        ABILITIES.infestation\n    ], []),\n    'rainray-arrow': new card_1.Card('Rainray Arrow', 'wood', 8, 3, 12, ['wood', 'wood'], [\n        ABILITIES.forestForce,\n        ABILITIES.midRange\n    ], []),\n    'leech-elemental': new card_1.Card('Leech Elemental', 'wood', 10, 10, 10, ['wood', 'wood', 'wood'], [\n        ABILITIES.infestation,\n        ABILITIES.midRange\n    ], []),\n    'nuada-supreme-ruler-of-darkness': new card_1.Card('Nuada Supreme Ruler Of Darkness', 'dark', 8, 40, 55, ['dark', 'dark', 'dark', 'dark', 'dark', 'dark'], [\n        ABILITIES.darkToken,\n        ABILITIES.darkTouch,\n        ABILITIES.poisonGas,\n        ABILITIES.fly,\n        ABILITIES.changeOfHeart,\n    ], []),\n    'sionnan-supreme-ruler-of-light': new card_1.Card('Sionnan Supreme Ruler Of Light', 'light', 8, 40, 55, ['light', 'light', 'light', 'light', 'light', 'light'], [\n        ABILITIES.lightToken,\n        ABILITIES.lightTouch,\n        ABILITIES.creatureHealer,\n        ABILITIES.fly,\n        ABILITIES.changeOfHeart,\n    ], []),\n    'hoji-supreme-ruler-of-the-void': new card_1.Card('Hoji Supreme Ruler Of The Void', 'void', 8, 40, 55, ['neutral'], [\n        ABILITIES.voidToken,\n        ABILITIES.voidTouch,\n        ABILITIES.darkHole,\n        ABILITIES.fly,\n        ABILITIES.changeOfHeart,\n    ], []),\n    'yamuna-supreme-ruler-of-aether': new card_1.Card('Yamuna Supreme Ruler Of Aether', 'aether', 8, 40, 55, ['neutral'], [\n        ABILITIES.voidToken,\n        ABILITIES.voidTouch,\n        ABILITIES.fluidDivision,\n        ABILITIES.fly,\n        ABILITIES.changeOfHeart,\n    ], []),\n    'doffet-the-platypus': new card_1.Card('Doffet The Platypus', 'water', 2, 3, 3, ['neutral'], [], []),\n    'doffet-the-egglaying-platypus': new card_1.Card('Doffet The Egglaying Platypus', 'water', 2, 1, 3, ['neutral'], [\n        ABILITIES.layEgg\n    ], []),\n    'doffet-the-deadly-platypus': new card_1.Card('Doffet The Deadly Platypus', 'water', 2, 1, 3, ['neutral'], [\n        ABILITIES.mortalStrike\n    ], []),\n    'doffet-the-friendly-platypus': new card_1.Card('Doffet The Friendly Platypus', 'water', 2, 1, 3, ['neutral'], [\n        ABILITIES.defender\n    ], []),\n    'doffet-the-wallflower': new card_1.Card('Doffet The Wallflower', 'water', 4, 5, 9, ['neutral', 'neutral'], [], []),\n    'doffet-the-deadly-defender': new card_1.Card('Doffet The Deadly Defender', 'water', 5, 7, 7, ['neutral', 'neutral'], [\n        ABILITIES.mortalStrike,\n        ABILITIES.defender\n    ], []),\n    'doffet-propagator-of-death': new card_1.Card('Doffet Propagator of Death', 'water', 5, 7, 7, ['neutral', 'neutral'], [\n        ABILITIES.mortalStrike,\n        ABILITIES.layEgg,\n    ], []),\n    'doffet-eternal-defender': new card_1.Card('Doffet Eternal Defender', 'water', 5, 7, 7, ['neutral', 'neutral'], [\n        ABILITIES.defender,\n        ABILITIES.layEgg\n    ], []),\n    'swordsmaster-abalyne': new card_1.Card('Swordsmaster Abalyne', 'metal', 1, 3, 3, ['metal'], [\n        ABILITIES.doubleStrike\n    ], [\n        CLANS.warrior,\n        CLANS.swordAdept,\n        CLANS.armorAdept,\n        CLANS.royalGuard\n    ]),\n    'chickenmera': new card_1.Card('Chickenmera', 'air', 3, 1, 3, ['air'], [\n        ABILITIES.fly\n    ], []),\n    'armored-ninja': new card_1.Card('Armored Ninja', 'earth', 3, 1, 1, ['earth', 'earth'], [\n        ABILITIES.mortalTouch,\n        ABILITIES.doubleMove\n    ], []),\n    'gogmatel-the-owlbear': new card_1.Card('Gogmatel The Owlbear', 'air', 2, 5, 7, ['air', 'air'], [\n        ABILITIES.forestForce,\n        ABILITIES.defender\n    ], []),\n    'jester': new card_1.Card('Jester', 'fire', 5, 0, 10, ['fire', 'fire', 'fire'], [\n        ABILITIES.cannotBattle,\n        ABILITIES.energyEconomy,\n        ABILITIES.reRollOne\n    ], []),\n    'druid-nicholsrita': new card_1.Card('Druid Nicholsrita', 'wood', 3, 0, 15, ['wood', 'wood', 'wood'], [\n        ABILITIES.cannotBattle,\n        ABILITIES.creatureHealer,\n        ABILITIES.woodToken\n    ], []),\n    'the-eye-in-the-sky': new card_1.Card('The Eye In The Sky', 'air', 5, 10, 15, ['air', 'air', 'air'], [\n        ABILITIES.farSight,\n        ABILITIES.airToken,\n        ABILITIES.wingUp\n    ], []),\n};\nexports.DEFAULT_RED = {\n    name: 'RED',\n    color: 'red',\n    deck: [\n        exports.cardCollection['doffet-the-war-platypus'],\n        exports.cardCollection['war-moose'],\n    ]\n};\nexports.DEFAULT_BLUE = {\n    name: 'BLUE',\n    color: 'blue',\n    deck: []\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dice = void 0;\nconst random_1 = __importDefault(require(\"random\"));\nclass Dice {\n    constructor(rank, color = \"#000000\") {\n        this.rolls = [];\n        this.classes = [\n            'dice-front',\n            'dice-back',\n            'dice-right',\n            'dice-left',\n            'dice-top',\n            'dice-bottom'\n        ];\n        this.rankedInfo = [\n            'assets/dice/rank-0-info.png',\n            '/assets/dice/rank-1-info.png',\n            '/assets/dice/rank-2-info.png',\n            '/assets/dice/rank-3-info.png',\n        ];\n        this.rank = rank;\n        this.faces = Dice.ranks[this.rank];\n        this.ctx = {};\n        this.rolledFaceClass = 'dice-front';\n        this.color = color;\n    }\n    getAttrImage(attr) {\n        return '/assets/dice/' + attr + '.png';\n    }\n    roll() {\n        return new Promise((resolve, reject) => {\n            const self = this;\n            const limit = 3;\n            let count = 0;\n            const id = setInterval(() => {\n                if (count >= limit) {\n                    clearInterval(id);\n                    const roll = this.faces[this.classes.indexOf(this.rolledFaceClass)];\n                    self.rolls.push(roll);\n                    resolve(roll);\n                    return;\n                }\n                count++;\n                const idx = random_1.default.int(0, this.classes.length - 1);\n                this.rolledFaceClass = this.classes[idx];\n            }, 550);\n        });\n    }\n    setCtx(ctx) {\n        this.ctx = ctx;\n    }\n    getEnergy(face) {\n        if (face.indexOf('-') >= 0) {\n            const parts = face.split('-');\n            return parts[0];\n        }\n        return face;\n    }\n    getEdge(face) {\n        let multiplier;\n        let crest;\n        if (face.length === 3) {\n            // pure crest\n            multiplier = 1;\n            crest = face;\n        }\n        else {\n            crest = face.substr(0, 3);\n            multiplier = parseInt(face.substr(3, 4));\n        }\n        return crest.toLowerCase();\n    }\n    getValue(face) {\n        if (face.indexOf('-') >= 0) {\n            const parts = face.split('-');\n            return parseInt(parts[1]);\n        }\n        else {\n            return 1;\n        }\n    }\n    getCrestImage(face) {\n        //let face = this.rolls[this.rolls.length - 1]\n        return this.faces[this.faces.indexOf(face)]; /*\n        let multiplier\n        let crest\n        if (face.length === 3){\n          // pure crest\n          multiplier = 1\n          crest = face\n        } else {\n          crest = face.substr(0,3)\n          multiplier = parseInt(face.substr(3,4))\n        }\n    \n        if (this.rank >= 3){\n          return crestImages[crest]['white']\n        }\n        return crestImages[crest]['black']*/\n    }\n}\nexports.Dice = Dice;\nDice.ranks = [\n    ['water', 'water', 'water', 'wood', 'wood', 'neutral'],\n    ['wood', 'wood', 'wood', 'water', 'water', 'neutral'],\n    ['water-2', 'water', 'wood-2', 'wood', 'dark', 'neutral'],\n    ['dark', 'neutral', 'wood', 'neutral', 'water', 'dark-2'],\n];\nDice.colors = [\n    '#000000',\n    '#FFFFFF',\n    '#FF0000',\n    '#00FF00',\n    '#0000FF',\n    '#FFFF00',\n    '#00FFFF',\n    '#FF00FF',\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnergyPool = void 0;\nconst events_1 = require(\"./events\");\nclass EnergyPool {\n    constructor() {\n        this.light = 0;\n        this.dark = 0;\n        this.aether = 0;\n        this.void = 0;\n        this.earth = 0;\n        this.air = 0;\n        this.water = 0;\n        this.fire = 0;\n        this.wood = 0;\n        this.metal = 0;\n        this.electric = 0;\n        this.ice = 0;\n        this.neutral = 0;\n        this.types = new Set();\n        this.events = events_1.EVENTS;\n        this.types.add('light');\n        this.types.add('dark');\n        this.types.add('aether');\n        this.types.add('void');\n        this.types.add('earth');\n        this.types.add('air');\n        this.types.add('water');\n        this.types.add('fire');\n        this.types.add('wood');\n        this.types.add('metal');\n        this.types.add('electric');\n        this.types.add('ice');\n        this.types.add('neutral');\n    }\n    isInteger(amount) {\n        return !isNaN(amount) && (function (x) { return (x | 0) === x; })(parseFloat(amount.toString()));\n    }\n    isPositiveInt(amount) {\n        return (this.isInteger(amount) && amount > 0);\n    }\n    isNegativeInt(amount) {\n        return (this.isInteger(amount) && amount < 0);\n    }\n    mint(type, amount) {\n        if (!this.types.has(type)) {\n            throw new Error('Unrecognized Energy type `' + type + '`');\n        }\n        if (!this.isPositiveInt(amount)) {\n            throw new Error('Invalid value for fn `mint`: ' + amount);\n        }\n        this.events.emit('mint', { type, amount });\n        switch (type) {\n            case 'light':\n                this.light += amount;\n                break;\n            case 'dark':\n                this.dark += amount;\n                break;\n            case 'aether':\n                this.aether += amount;\n                break;\n            case 'void':\n                this.void += amount;\n                break;\n            case 'earth':\n                this.earth += amount;\n                break;\n            case 'air':\n                this.air += amount;\n                break;\n            case 'water':\n                this.water += amount;\n                break;\n            case 'fire':\n                this.fire += amount;\n                break;\n            case 'wood':\n                this.wood += amount;\n                break;\n            case 'metal':\n                this.metal += amount;\n                break;\n            case 'electric':\n                this.electric += amount;\n                break;\n            case 'ice':\n                this.ice += amount;\n                break;\n            case 'neutral':\n                this.neutral += amount;\n                break;\n        }\n    }\n    burn(type, amount) {\n        if (!this.types.has(type)) {\n            throw new Error('Unrecognized Energy type `' + type + '`');\n        }\n        if (!this.isPositiveInt(amount)) {\n            throw new Error('Invalid value for fn `burn`: ' + amount);\n        }\n        this.events.emit('burn', { type, amount });\n        switch (type) {\n            case 'light':\n                this.light -= amount;\n                break;\n            case 'dark':\n                this.dark -= amount;\n                break;\n            case 'aether':\n                this.aether -= amount;\n                break;\n            case 'void':\n                this.void -= amount;\n                break;\n            case 'earth':\n                this.earth -= amount;\n                break;\n            case 'air':\n                this.air -= amount;\n                break;\n            case 'water':\n                this.water -= amount;\n                break;\n            case 'fire':\n                this.fire -= amount;\n                break;\n            case 'wood':\n                this.wood -= amount;\n                break;\n            case 'metal':\n                this.metal -= amount;\n                break;\n            case 'electric':\n                this.electric -= amount;\n                break;\n            case 'ice':\n                this.ice -= amount;\n                break;\n            case 'neutral':\n                this.neutral -= amount;\n                break;\n        }\n    }\n    reset(type) {\n        if (!this.types.has(type)) {\n            throw new Error('Unrecognized Energy type `' + type + '`');\n        }\n        this.events.emit('reset', { type });\n        switch (type) {\n            case 'light':\n                this.light = 0;\n                break;\n            case 'dark':\n                this.dark = 0;\n                break;\n            case 'aether':\n                this.aether = 0;\n                break;\n            case 'void':\n                this.void = 0;\n                break;\n            case 'earth':\n                this.earth = 0;\n                break;\n            case 'air':\n                this.air = 0;\n                break;\n            case 'water':\n                this.water = 0;\n                break;\n            case 'fire':\n                this.fire = 0;\n                break;\n            case 'wood':\n                this.wood = 0;\n                break;\n            case 'metal':\n                this.metal = 0;\n                break;\n            case 'electric':\n                this.electric = 0;\n                break;\n            case 'ice':\n                this.ice = 0;\n                break;\n            case 'neutral':\n                this.neutral = 0;\n                break;\n        }\n    }\n    get(type) {\n        if (!this.types.has(type)) {\n            throw new Error('Unrecognized Energy type `' + type + '`');\n        }\n        switch (type) {\n            case 'light':\n                return this.pad(this.light);\n                break;\n            case 'dark':\n                return this.pad(this.dark);\n                break;\n            case 'aether':\n                return this.pad(this.aether);\n                break;\n            case 'void':\n                return this.pad(this.void);\n                break;\n            case 'earth':\n                return this.pad(this.earth);\n                break;\n            case 'air':\n                return this.pad(this.air);\n                break;\n            case 'water':\n                return this.pad(this.water);\n                break;\n            case 'fire':\n                return this.pad(this.fire);\n                break;\n            case 'wood':\n                return this.pad(this.wood);\n                break;\n            case 'metal':\n                return this.pad(this.metal);\n                break;\n            case 'electric':\n                return this.pad(this.electric);\n                break;\n            case 'ice':\n                return this.pad(this.ice);\n                break;\n            case 'neutral':\n                return this.pad(this.neutral);\n                break;\n        }\n        return this.pad(0);\n    }\n    pad(num, size = 2) {\n        let s = num + \"\";\n        while (s.length < size)\n            s = \"0\" + s;\n        return s;\n    }\n}\nexports.EnergyPool = EnergyPool;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENTS = exports.EventDispatcher = void 0;\nconst events_1 = __importDefault(require(\"events\"));\nclass EventDispatcher {\n    constructor() {\n        this.events = new events_1.default.EventEmitter();\n        this.keys = [];\n    }\n    keyExists(key) {\n        return (this.keys.indexOf(key) >= 0);\n    }\n    emit(key, value) {\n        if (!this.keyExists(key)) {\n            this.keys.push(key);\n        }\n        this.events.emit(key, value);\n    }\n    on(key, fn) {\n        this.events.on(key, (value) => {\n            console.log('EVENT::', key, value, fn);\n            fn(value);\n        });\n    }\n}\nexports.EventDispatcher = EventDispatcher;\nconst EVENTS = new EventDispatcher();\nexports.EVENTS = EVENTS;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Map = void 0;\nclass Map {\n    constructor(ctx, rooms) {\n        this.tiles = {\n            RIVAL_TILE: ['0:8', '0:10', '1:9'],\n            RIVAL_TOWER: [\n                '5:4',\n                '5:14',\n                '11:9',\n                '0:9'\n            ],\n            PLAYER_TOWER: [\n                '21:9',\n                '27:4',\n                '27:14',\n                '32:9',\n            ],\n            PLAYER_TILE: ['32:8', '32:10', '31:9'],\n            WALL: [\n                '16:3', '16:4', '16:5', '16:6',\n                '16:12', '16:13', '16:14', '16:15',\n                '18:7', '18:8', '18:9', '18:10', '18:11',\n                '14:7', '14:8', '14:9', '14:10', '14:11',\n            ],\n            NEUTRAL_TILE: [\n                '15:7', '15:8', '15:9', '15:10', , '15:11',\n                '16:7', '16:8', '16:9', '16:10', , '16:11',\n                '17:7', '17:8', '17:9', '17:10', , '17:11',\n            ]\n        };\n        this.ctx = ctx;\n        this.cols = 33;\n        this.rows = 19;\n        this.rooms = rooms;\n    }\n}\nexports.Map = Map;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EMPTY_PLAYER = exports.Player = void 0;\nconst dice_1 = require(\"./dice\");\nconst energy_pool_1 = require(\"./energy-pool\");\nconst events_1 = require(\"./events\");\nconst audio_1 = require(\"./audio\");\nclass Player {\n    constructor(opts, ctx) {\n        this.boardCards = [];\n        this.deckCards = [];\n        this.dice = [];\n        this.dicePool = [];\n        this.score = 0;\n        this.isCastPending = false;\n        this.hasCasted = false;\n        this.isUnfoldPending = false;\n        this.unfoldCounter = 6;\n        this.isMovePending = false;\n        this.moveCounter = 0;\n        this.isBattlePending = false;\n        this.canRoll = true;\n        this.canEndTurn = true;\n        this.events = events_1.EVENTS;\n        this.avatar = {};\n        this.activeMessage = '';\n        this.ctx = ctx;\n        this.deckCards = opts.deck;\n        if (this['deckCards']) {\n            for (let i = 0; i < this.deckCards.length; i++) {\n                this.deckCards[i].setOwner(this);\n            }\n        }\n        this.name = opts.name;\n        this.color = opts.color;\n        if (this.color === 'red') {\n            this.avatar = {\n                src: 'assets/facesets/gary.png',\n                position: '0 0'\n            };\n        }\n        if (this.color === 'blue') {\n            this.avatar = {\n                src: 'assets/facesets/marcia.png',\n                position: '0 0'\n            };\n        }\n        if (this.color === 'green') {\n            this.avatar = {\n                src: 'assets/facesets/anne.png',\n                position: '0 0'\n            };\n        }\n        if (this.color === 'grey') {\n            this.avatar = {\n                src: 'assets/facesets/clyde.png',\n                position: '0 0'\n            };\n        }\n        this.energyPool = new energy_pool_1.EnergyPool();\n        this.dicePool.push(new dice_1.Dice(0));\n        this.dicePool.push(new dice_1.Dice(0));\n        this.dicePool.push(new dice_1.Dice(1));\n        this.dicePool.push(new dice_1.Dice(1));\n        this.dicePool.push(new dice_1.Dice(2));\n        this.dicePool.push(new dice_1.Dice(2));\n        this.dicePool.push(new dice_1.Dice(3));\n    }\n    sleep(ms = 500) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                try {\n                    setTimeout(() => { resolve(); });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    increaseScore(amount) {\n        this.score += Math.abs(amount);\n    }\n    pickDice(pooledDice) {\n        console.log('pooledDice', pooledDice);\n        console.log(this.dicePool);\n        if (this.dice.length >= 3) {\n            return;\n        }\n        const audio = new audio_1.DGAudio('assets/audio/pickDice.mp3');\n        audio.play();\n        let idx = -1;\n        for (let i = 0; i < this.dicePool.length; i++) {\n            if (this.dicePool[i].rank === pooledDice.rank) {\n                idx = i;\n            }\n        }\n        //const dice = new Dice(pooledDice.rank)\n        this.dice.push(pooledDice);\n        this.dicePool.splice(idx, 1);\n    }\n    unpickDice(idx) {\n        const dice = this.dice.splice(idx, 1);\n        this.dicePool.push(dice[0]);\n    }\n    rollDice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.canRoll) {\n                return this.toast('I cannot roll right now!');\n            }\n            if (this.dice.length < 3) {\n                return this.toast('I must select 3 dice to roll!');\n            }\n            this.canRoll = false;\n            const audio = new audio_1.DGAudio('assets/audio/diceroll.mp3');\n            audio.play();\n            const promises = [];\n            for (let i = 0; i < this.dice.length; i++) {\n                const dice = this.dice[i];\n                promises.push(dice.roll());\n            }\n            const res = yield Promise.all(promises);\n            console.log('rolled', res);\n            let message = 'Great! Rolled ';\n            const typeToEmoji = {\n                'water': '💧',\n                'wood': '🌳',\n                'dark': '🌘',\n                'neutral': '🃏'\n            };\n            for (let i = 0; i < res.length; i++) {\n                const dice = this.dice[i];\n                const face = res[i];\n                const energy = dice.getEnergy(face);\n                const value = dice.getValue(face);\n                const image = dice.getCrestImage(face);\n                yield this.sleep(750);\n                console.log(energy, value);\n                this.energyPool.mint(energy, value);\n                message += 'x' + value + typeToEmoji[energy] + ', ';\n                for (let j = 0; j < this.deckCards.length; j++) {\n                    /*\n                    if (this.deckCards[j].cost <= this.energyPool.cst){\n                      this.deckCards[j].canCast = true\n                    }*/\n                }\n                for (let j = 0; j < this.boardCards.length; j++) {\n                    /*\n                    if (this.boardCards[j].cost <= this.energyPool.mov){\n                      this.boardCards[j].canMove = true\n                    }\n            \n                    if (this.boardCards[j].cost <= this.energyPool.btl){\n                      this.boardCards[j].canBattle = true\n                    }*/\n                }\n                console.log({\n                    face, energy, value, image\n                });\n            }\n            this.toast(message);\n            //await this.sleep()\n            //this.dice = []\n            /*\n              const face:string = await dice.roll()\n              const energy = dice.getEnergy(face)\n              const value = dice.getValue(face)\n              const image = dice.getCrestImage(face)\n        \n              console.log({\n                face, energy, value, image\n              })\n            }*/\n        });\n    }\n    endTurn() {\n        // set all flags so nothing is clickeable\n        for (let i = 0; i < this.dice.length; i++) {\n            this.dicePool.push(this.dice[i]);\n        }\n        this.dice = [];\n        this.canRoll = false;\n        this.canEndTurn = false;\n        this.hasCasted = false;\n        for (let i = 0; i < this.boardCards.length; i++) {\n            this.boardCards[i].canCast = false;\n            this.boardCards[i].canMove = false;\n            this.boardCards[i].canBattle = false;\n            this.boardCards[i].hasMoved = false;\n            this.boardCards[i].hasBattled = false;\n            this.boardCards[i].canBeClicked = true;\n            this.boardCards[i].showMenu = false;\n        }\n    }\n    startTurn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // start a beautiful turn!\n            this.isCastPending = false;\n            this.isMovePending = false;\n            this.isUnfoldPending = false;\n            this.unfoldCounter = 6;\n            this.canRoll = true;\n            this.canEndTurn = true;\n            if (this.color === 'blue') {\n                // starting cpu turn\n                yield this.cpuTurn();\n            }\n        });\n    }\n    cpuTurn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dice = new dice_1.Dice(1);\n            this.pickDice(dice);\n            console.log('this.pickDice(dice)');\n            yield this.sleep();\n            this.pickDice(dice);\n            console.log('this.pickDice(dice)');\n            yield this.sleep();\n            this.pickDice(dice);\n            console.log('this.pickDice(dice)');\n            yield this.sleep();\n            yield this.rollDice();\n            console.log('rolled dice');\n            yield this.sleep();\n            this.events.emit('endCpuTurn', true);\n            console.log('emit called');\n            this.endTurn();\n        });\n    }\n    toast(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log('message', message);\n            //this.ctx.\n            const audio = new audio_1.DGAudio('assets/audio/toast.wav');\n            audio.play();\n            this.activeMessage = message;\n            /*\n        \n            await this.sleep(100)\n        \n            const domMessage:any = document.querySelector('.spoken-words:not([open])')\n        \n            domMessage.classList.add('open')\n            const animation = this.ctx.animationCtrl.create()\n            .addElement(domMessage)\n            .duration(500)\n            //.easing('ease-in')\n            //.fromTo('transform', 'translateY(0px)', 'translateY(100vh)')\n            .fromTo('opacity', '0', '1')\n            await animation.play()\n        */\n        });\n    }\n}\nexports.Player = Player;\nexports.EMPTY_PLAYER = new Player({\n    name: 'null',\n    color: 'null',\n    deck: []\n}, {});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Room1 = exports.Room0 = void 0;\nconst room_1 = require(\"./room\");\nconst demo_1 = require(\"./demo\");\nexports.Room0 = new room_1.Room('room-zero', 9, 9, null, 'assets/rooms/room-0.png', [\n    // player start\n    {\n        classes: ['player-tile', 'floor'],\n        x: 7,\n        y: 4,\n    },\n    {\n        classes: ['victory-tile', 'floor'],\n        x: 0,\n        y: 4,\n    },\n    {\n        classes: [''],\n        x: 6,\n        y: 4\n    },\n    {\n        classes: [''],\n        x: 5,\n        y: 4\n    },\n    {\n        classes: [''],\n        x: 4,\n        y: 4\n    },\n    {\n        classes: [''],\n        x: 3,\n        y: 4\n    },\n    {\n        classes: [''],\n        x: 2,\n        y: 4\n    },\n    {\n        classes: [''],\n        x: 1,\n        y: 4\n    },\n]);\nexports.Room1 = new room_1.Room('room-one', 9, 11, { x: 10, y: 4 }, 'assets/rooms/room-1.png', [\n    // player start\n    {\n        classes: ['player-tile', 'floor'],\n        x: 10,\n        y: 4,\n    },\n    {\n        classes: ['victory-tile', 'floor'],\n        x: 0,\n        y: 4,\n    },\n    {\n        classes: [''],\n        x: 6,\n        y: 4\n    },\n    { classes: ['vit-restore', 'floor'], x: 4, y: 4 },\n    // creature-guarded user tiles\n    {\n        classes: ['player-tile', 'creature', 'floor'],\n        x: 9,\n        y: 1,\n        creature: demo_1.cardCollection['sea-wolf-lobstroslly']\n    },\n    {\n        classes: ['player-tile', 'creature', 'floor'],\n        x: 9,\n        y: 7,\n        creature: demo_1.cardCollection['plague-termite'],\n    },\n    {\n        classes: ['player-tile', 'creature', 'floor'],\n        x: 2,\n        y: 0,\n        creature: demo_1.cardCollection['druid-nicholsrita'],\n    },\n    {\n        classes: ['player-tile', 'creature', 'floor'],\n        x: 2,\n        y: 8,\n        creature: demo_1.cardCollection['swamp-nix'],\n    },\n    // walkeable tiles\n    { classes: ['floor'], x: 9, y: 0 },\n    { classes: ['floor'], x: 10, y: 0 },\n    { classes: ['floor'], x: 10, y: 1 },\n    { classes: ['floor'], x: 9, y: 2 },\n    { classes: ['floor'], x: 10, y: 2 },\n    { classes: ['floor'], x: 9, y: 3 },\n    { classes: ['floor'], x: 10, y: 3 },\n    { classes: ['floor'], x: 9, y: 4 },\n    { classes: ['floor'], x: 9, y: 5 },\n    { classes: ['floor'], x: 10, y: 5 },\n    { classes: ['floor'], x: 9, y: 6 },\n    { classes: ['floor'], x: 10, y: 6 },\n    { classes: ['floor'], x: 10, y: 7 },\n    { classes: ['floor'], x: 9, y: 8 },\n    { classes: ['floor'], x: 10, y: 8 },\n    { classes: ['floor'], x: 3, y: 0 },\n    { classes: ['floor'], x: 4, y: 0 },\n    { classes: ['floor'], x: 3, y: 1 },\n    { classes: ['floor'], x: 4, y: 1 },\n    { classes: ['floor'], x: 3, y: 2 },\n    { classes: ['floor'], x: 4, y: 2 },\n    { classes: ['floor'], x: 3, y: 6 },\n    { classes: ['floor'], x: 4, y: 6 },\n    { classes: ['floor'], x: 3, y: 7 },\n    { classes: ['floor'], x: 4, y: 7 },\n    { classes: ['floor'], x: 3, y: 8 },\n    { classes: ['floor'], x: 4, y: 8 },\n    // all empty tiles\n    { classes: [''], x: 8, y: 4 },\n    { classes: [''], x: 7, y: 4 },\n    { classes: [''], x: 6, y: 4 },\n    { classes: [''], x: 5, y: 4 },\n    { classes: [''], x: 4, y: 4 },\n    { classes: [''], x: 3, y: 4 },\n    { classes: [''], x: 2, y: 4 },\n    { classes: [''], x: 1, y: 4 },\n    { classes: [''], x: 0, y: 0 },\n    { classes: [''], x: 1, y: 0 },\n    { classes: [''], x: 5, y: 0 },\n    { classes: [''], x: 6, y: 0 },\n    { classes: [''], x: 7, y: 0 },\n    { classes: [''], x: 8, y: 0 },\n    { classes: [''], x: 0, y: 8 },\n    { classes: [''], x: 1, y: 8 },\n    { classes: [''], x: 5, y: 8 },\n    { classes: [''], x: 6, y: 8 },\n    { classes: [''], x: 7, y: 8 },\n    { classes: [''], x: 8, y: 8 },\n    { classes: [''], x: 0, y: 1 },\n    { classes: [''], x: 1, y: 1 },\n    { classes: [''], x: 2, y: 1 },\n    { classes: [''], x: 5, y: 1 },\n    { classes: [''], x: 6, y: 1 },\n    { classes: [''], x: 7, y: 1 },\n    { classes: [''], x: 8, y: 1 },\n    { classes: [''], x: 0, y: 2 },\n    { classes: [''], x: 1, y: 2 },\n    { classes: [''], x: 2, y: 2 },\n    { classes: [''], x: 6, y: 2 },\n    { classes: [''], x: 7, y: 2 },\n    { classes: [''], x: 8, y: 2 },\n    { classes: [''], x: 0, y: 3 },\n    { classes: [''], x: 1, y: 3 },\n    { classes: [''], x: 2, y: 3 },\n    { classes: [''], x: 3, y: 3 },\n    { classes: [''], x: 4, y: 3 },\n    { classes: [''], x: 5, y: 3 },\n    { classes: [''], x: 6, y: 3 },\n    { classes: [''], x: 7, y: 3 },\n    { classes: [''], x: 8, y: 3 },\n    { classes: [''], x: 0, y: 7 },\n    { classes: [''], x: 1, y: 7 },\n    { classes: [''], x: 2, y: 7 },\n    { classes: [''], x: 5, y: 7 },\n    { classes: [''], x: 6, y: 7 },\n    { classes: [''], x: 7, y: 7 },\n    { classes: [''], x: 8, y: 7 },\n    { classes: [''], x: 0, y: 6 },\n    { classes: [''], x: 1, y: 6 },\n    { classes: [''], x: 2, y: 6 },\n    { classes: [''], x: 6, y: 6 },\n    { classes: [''], x: 7, y: 6 },\n    { classes: [''], x: 8, y: 6 },\n    { classes: [''], x: 0, y: 5 },\n    { classes: [''], x: 1, y: 5 },\n    { classes: [''], x: 2, y: 5 },\n    { classes: [''], x: 3, y: 5 },\n    { classes: [''], x: 4, y: 5 },\n    { classes: [''], x: 5, y: 5 },\n    { classes: [''], x: 6, y: 5 },\n    { classes: [''], x: 7, y: 5 },\n    { classes: [''], x: 8, y: 5 },\n]);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Room = void 0;\nconst cell_1 = require(\"./cell\");\nconst events_1 = require(\"./events\");\nclass Room {\n    constructor(name, width, height, initialTile = { x: 0, y: 0 }, backgroundUrl, tileSet) {\n        this.rows = [];\n        this.cols = [];\n        this.events = events_1.EVENTS;\n        this.name = name;\n        this.width = width;\n        this.height = height;\n        this.initialTile = initialTile;\n        this.backgroundUrl = backgroundUrl;\n        this.tileSet = tileSet;\n        this.createRows();\n        this.createColumns();\n        this.createCells();\n        this.setCellsDoms();\n    }\n    createRows() {\n        this.rows = [];\n        for (let i = 0; i < this.width; i++) {\n            this.rows.push(i);\n        }\n    }\n    createColumns() {\n        this.cols = [];\n        for (let i = 0; i < this.height; i++) {\n            this.cols.push(i);\n        }\n    }\n    createCells() {\n        this.cells = {};\n        for (let i = 0; i < this.rows.length; i++) {\n            for (let j = 0; j < this.cols.length; j++) {\n                const cell = new cell_1.Cell({\n                    ctx: this.ctx,\n                    x: j,\n                    y: i,\n                    domPrefix: this.name + '-'\n                });\n                this.cells[j + ':' + i] = cell;\n            }\n        }\n    }\n    getCell(x, y) {\n        return this.cells[x + ':' + y];\n    }\n    setCellsDoms() {\n        /*\n        setTimeout(() => {\n          const keys = Object.keys(this.cells)\n          for (let i = 0; i < keys.length; i++) {\n            this.cells[keys[i]].attachDom()\n          }\n        }, 500)*/\n    }\n    setTile(cell, _class) {\n        if (_class.indexOf('tile') >= 0) {\n            cell.addClass('floor');\n        }\n        /*\n            if (!cell.hasClass('floor')){\n              cell.addClass('wall')\n            }*/\n        cell.addClass(_class);\n        return cell;\n    }\n    sleep(ms = 100) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    resolve();\n                }, ms);\n            });\n        });\n    }\n    paintMap() {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log('room paint map event', this.width, this.height);\n            const tiles = this.tileSet;\n            const visited = [];\n            for (let i = 0; i < tiles.length; i++) {\n                const tile = tiles[i];\n                const cell = this.getCell(tile.x, tile.y);\n                visited.push(cell);\n                for (let j = 0; j < tile.classes.length; j++) {\n                    this.setTile(cell, tile.classes[j]);\n                }\n                if (tile['creature'] && this.ctx) {\n                    this.events.emit('freeCast', {\n                        card: tile.creature,\n                        cell\n                    });\n                    //this.ctx.lib.board.freeCast(tile.creature, cell)\n                }\n            }\n            for (let i = 0; i < this.rows.length; i++) {\n                for (let j = 0; j < this.cols.length; j++) {\n                    const cell = this.getCell(j, i);\n                    let found = false;\n                    for (let m = 0; m < visited.length; m++) {\n                        const seen = visited[m];\n                        if (seen.x === cell.x && seen.y === cell.y) {\n                            // been visited, skip\n                            found = true;\n                        }\n                    }\n                    if (!found) {\n                        cell.addClass('wall');\n                        //cell.addClass('tile')\n                    }\n                }\n            }\n            /*\n            const keys = Object.keys(this.map.tiles)\n            for (let i = 0; i < keys.length; i++) {\n              let type = keys[i]\n              let cells = this.map.tiles[type]\n        \n              for (let j = 0; j < cells.length; j++) {\n                //this.setTile(i + ':' + j, 'tile')\n                //this.setTile(i + ':' + j, this.classes[type])\n                 // this.setTile(j + ':' + i, 'tile')\n                 // this.setTile(j + ':' + i, this.classes[type])\n                 this.setTile(cells[j], 'tile')\n                 this.setTile(cells[j], this.classes[type])\n              }\n            }*/\n        });\n    }\n    setCtx(ctx) {\n        this.ctx = ctx;\n        for (let i = 0; i < this.rows.length; i++) {\n            for (let j = 0; j < this.cols.length; j++) {\n                const cell = this.getCell(j, i);\n                cell.setCtx(ctx);\n            }\n        }\n    }\n    getCells() {\n        return this.cells;\n    }\n    clearClass(_class) {\n        console.log('clearClass called for', _class);\n        const keys = Object.keys(this.cells);\n        for (let i = 0; i < keys.length; i++) {\n            const cell = this.cells[keys[i]];\n            cell.rmClass(_class);\n        }\n        const items = document.querySelectorAll('.' + _class);\n        for (let i = 0; i < items.length; i++) {\n            items[i].classList.remove(_class);\n        }\n    }\n    clearClickAreas() {\n        const keys = Object.keys(this.cells);\n        for (let i = 0; i < keys.length; i++) {\n            this.cells[keys[i]].canBeClicked = false;\n        }\n    }\n}\nexports.Room = Room;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nclass Storage {\n    constructor(localStorage, namespaces) {\n        this.keys = {};\n        this.data = {};\n        this.ls = localStorage;\n        this.namespaces = namespaces;\n        for (let i = 0; i < this.namespaces.length; i++) {\n            this.read(namespaces[i]);\n        }\n    }\n    // for later use in hashed tables. for now returns as capitalized\n    parseKey(key) {\n        return key.toUpperCase();\n    }\n    // writes data on every `set` down to localStorage\n    write(namespace) {\n        const key = this.parseKey(namespace);\n        const data = JSON.stringify(this.data[key]);\n        return this.ls.setItem(key, data);\n    }\n    // fetches and populates the object from localStorage\n    read(namespace) {\n        const key = this.parseKey(namespace);\n        const json = this.ls.getItem(key);\n        if (!json) {\n            return {};\n        }\n        const data = JSON.parse(json);\n        this.keys = Object.keys(data);\n        this.data = data;\n        return data;\n    }\n    has(namespace, key) {\n        return (this.keys[namespace].indexOf(key) >= 0);\n    }\n    set(namespace, key, value) {\n        if (!this.has(namespace, key)) {\n            this.keys[namespace].push(key);\n            this.data[namespace][key] = value;\n            this.write(namespace);\n        }\n    }\n    get(namespace, key) {\n        return this.data[namespace][key];\n    }\n}\nexports.Storage = Storage;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tutorial = void 0;\nconst events_1 = require(\"./events\");\nconst audio_1 = require(\"./audio\");\nclass Tutorial {\n    constructor(red, blue) {\n        this.events = events_1.EVENTS;\n        this.emitNonce = 0;\n        this.emits = [\n            {\n                text: 'Hello! My name is Marla. Welcome to Dice Guardians. Click the \"Got it\" button to advance in the tutorial',\n            },\n            {\n                text: 'Let\\'s start with the basics! I will point out parts of the screen with a white aura like the one around my Player Card',\n                target: '.user-card-blue',\n            },\n            {\n                text: 'You can see your stats and avatar in the Player Card at the bottom right corner',\n                target: '.user-card-red',\n            },\n            {\n                text: 'Your name and score. As you advance through the dungeon it will increase',\n                target: '.user-card-red .user-chips',\n            },\n            {\n                text: 'This is your energy pool. It fills by rolling your dice.',\n                target: '.user-card-red app-energy-pool',\n            },\n            {\n                text: 'Your dice pool acts as a deck of dice. You can see each of their 6 faces by placing your mouse over them. Click on them to add them to the rolling area.',\n                target: '.user-card-red .player-dice-pool',\n            },\n            {\n                text: 'Each player rolls 3 dice at the start of their turn. The collected energy will serve to summon creatures and activate their abilities',\n                target: '.user-card-red .selected-dice',\n            },\n            {\n                text: 'Now click on \"ROLL DICE\" to test your luck and collect the energy.',\n                target: '.user-card-red .rollDiceButton',\n            },\n            {\n                text: 'Amazing! Your energy pool has increased!',\n                target: '.user-card-red app-energy-pool',\n            },\n            {\n                text: 'Get a clear view of your deck using the \"Toggle Deck View\" button underneath',\n                target: '.viewDeckButton',\n            },\n            {\n                text: 'Now it\\'s time to play some cards. Place your mouse over any to open their menu. Use the \"View\" option to open the fullscreen card inspector. If you have enough energy of their type a \"Cast\" button will appear as well',\n                target: '.bottom-drawer'\n            },\n            {\n                text: 'Click on an empty dungeon tile to summon your creature',\n                target: 'app-board'\n            },\n            {\n                text: 'Creatures emerge from a cube-like egg. Select 5 more tiles where to place each face of the egg and extend your dungeon path',\n                target: 'app-board'\n            },\n            {\n                text: 'After all 6 faces are unfolded your turn continues. Every creature can attack once and move once every turn. Let\\'s start with the latter. Click on your creature to open it\\'s menu. Then, select [Move]',\n                target: 'app-board-battler'\n            },\n            {\n                text: 'The objective of this first dungeon is to conquest the blue tile in front of the door. Go!',\n                target: '.rival-tile'\n            },\n        ];\n        this.displayButton = \"block\";\n        this.red = red;\n        this.blue = blue;\n        this.listeners();\n    }\n    listeners() {\n        let self = this;\n        /*\n            self.events.emit('tutorial', {\n              text : 'Hello and welcome to Dice Guardians!',\n            })\n        \n            self.events.emit('tutorial', {\n              text: 'My name is Marcia and I\\'ll guide you on your first game',\n            })\n        \n            self.events.emit('tutorial', {\n              text: 'This is a very early demo so Beware of Dragons! 🐉🐉🐉'\n        \n            })*/\n        this.events.on('splashHidden', (payload) => __awaiter(this, void 0, void 0, function* () {\n            //await self.sleep(1000)\n            self.forward();\n        }));\n        this.events.on('castBg', (payload) => {\n            console.log('tutorial castBg', payload);\n        });\n        this.events.on('castFn', (payload) => {\n            console.log('tutorial castFn', payload);\n        });\n        this.events.on('moveBg', (payload) => {\n            console.log('tutorial moveBg', payload);\n        });\n        this.events.on('moveStep', (payload) => {\n            console.log('tutorial moveFn', payload);\n            if (payload.cell.x === 0 && payload.cell.y === 4) {\n                console.log('first');\n                self.emits.unshift({\n                    text: 'Congratulations! You have conquered the first of the 3 rooms in the Demo. Let\\'s advance your creature to the next room',\n                });\n                self.events.emit('roomFinished', {});\n                self.forward();\n            }\n        });\n        this.events.on('unfold', (payload) => {\n            console.log('tutorial unfold', payload);\n        });\n    }\n    sleep(ts = 1000) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    resolve();\n                }, ts);\n            });\n        });\n    }\n    forward() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.emits.length < this.emitNonce) {\n                this.displayButton = \"none\";\n                return;\n            }\n            this.displayButton = \"block\";\n            const item = this.emits[this.emitNonce];\n            this.emitNonce += 1;\n            const audio = new audio_1.DGAudio('assets/audio/Decision2.wav');\n            audio.play();\n            if (item['target']) {\n                const el = document.querySelector(item.target);\n                if (!el) {\n                    throw new Error('target not found');\n                }\n                const prev = document.querySelectorAll('.tutorialActive');\n                for (let i = 0; i < prev.length; i++) {\n                    prev[i].classList.remove('tutorialActive');\n                }\n                el.classList.add('tutorialActive');\n            }\n            this.events.emit('tutorial', item);\n            /*\n            self.events.emit('tutorial', {\n              text: 'This is your energy pool. At the start of every turn each player rolls 3 dice to collect energy'\n            })\n        \n            self.events.emit('tutorial', {\n              text: 'This is your dice pool. Select up to three dice by clicking on them'\n            })\n        \n            self.events.emit('tutorial', {\n              text: 'Click the \"ROLL DICE\" button to go for a spin and collect some energy'\n            })*/\n        });\n    }\n    backward() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.emitNonce <= 0) {\n                //this.displayButton=\"none\"\n                return;\n            }\n            this.displayButton = \"block\";\n            const item = this.emits[this.emitNonce];\n            this.emitNonce -= 1;\n            const audio = new audio_1.DGAudio('assets/audio/Decision2.wav');\n            audio.play();\n            if (item['target']) {\n                const el = document.querySelector(item.target);\n                if (!el) {\n                    throw new Error('target not found');\n                }\n                const prev = document.querySelectorAll('.tutorialActive');\n                for (let i = 0; i < prev.length; i++) {\n                    prev[i].classList.remove('tutorialActive');\n                }\n                el.classList.add('tutorialActive');\n            }\n            this.events.emit('tutorial', item);\n        });\n    }\n}\nexports.Tutorial = Tutorial;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.User = void 0;\nclass User {\n    constructor(ctx) {\n        this.ctx = ctx;\n    }\n    register(username, email, password, voucher) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log('register init');\n            const res = yield this.ctx.http.post('register', {\n                username, email, password, voucher\n            });\n            console.log('register', res);\n        });\n    }\n}\nexports.User = User;\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2.entry.js\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","export default \"<ion-app>\\n  <ion-router-outlet></ion-router-outlet>\\n</ion-app>\\n\";","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => import('./home/home.module').then( m => m.HomePageModule)\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'lounge',\n    loadChildren: () => import('./pages/lounge/lounge.module').then( m => m.LoungePageModule)\n  },\n  {\n    path: 'battlefield',\n    loadChildren: () => import('./pages/battlefield/battlefield.module').then( m => m.BattlefieldPageModule)\n  },\n  {\n    path: 'card-viewer',\n    loadChildren: () => import('./pages/card-viewer/card-viewer.module').then( m => m.CardViewerPageModule)\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { HttpClientModule  } from '@angular/common/http'\nimport {DiceGuardiansModuleService} from './services/dice-guardians-module.service'\n\n\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    DiceGuardiansModuleService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Platform } from '@ionic/angular'\nimport { Injectable } from '@angular/core'\n\nimport { Animation, AnimationController } from '@ionic/angular'\n\nimport {\n  User,\n  Http,\n  Dice,\n  Board,\n  Map,\n  Player,\n  DEFAULT_RED,\n  DEFAULT_BLUE,\n  Storage,\n\n\n  Room,\n  Room0,\n  Room1,\n\n  TUTORIAL,\n  Tutorial,\n\n  Audio\n} from 'dice-guardians-module'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiceGuardiansModuleService {\n  httpClient:HttpClient\n\n  http:Http\n\n  user:User\n  board:Board\n  map:Map\n\n  baseUrl:string\n  platform:Platform\n/*\n  storage:Storage = new Storage(\n    localStorage,\n    ['cards', 'abilities']\n  )\n  */\n\n  animationCtrl: AnimationController\n\n  constructor(\n    httpClient:HttpClient,\n    animationCtrl: AnimationController,\n    platform:Platform\n  ) {\n    const self = this\n    this.platform = platform\n\n    this.animationCtrl = animationCtrl\n\n\n    this.map = new Map(this, [\n      //Room0\n      Room1\n    ])\n\n    this.board = new Board(\n      this,\n      [Room0, Room1],\n      {\n        red : new Player(DEFAULT_RED, this),\n        blue : new Player(DEFAULT_BLUE, this)\n      },\n      true\n    )\n\n\n    this.board.players.red.energyPool.mint('water', 3)\n    this.board.players.red.energyPool.mint('wood', 3)\n    this.board.players.red.energyPool.mint('neutral', 1)\n\n    this.board.players.blue.energyPool.mint('fire', 3)\n    this.board.players.blue.energyPool.mint('metal', 1)\n    this.board.players.blue.energyPool.mint('light', 2)\n\n\n    this.platform.ready().then(() => {\n      this.board.events.emit('ready', {})\n    })\n    /*\n    this.httpClient = httpClient\n\n    this.baseUrl = 'http://' + window.location.hostname + ':3000/'\n\n    this.http = Http(this)\n    // instantiate the goddamn user\n    this.user = new User(this)*/\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}