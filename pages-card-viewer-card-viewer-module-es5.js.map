{"version":3,"sources":["webpack:///src/app/pages/card-viewer/card-viewer.page.html","webpack:///src/app/pages/card-viewer/card-viewer-routing.module.ts","webpack:///src/app/pages/card-viewer/card-viewer.module.ts","webpack:///src/app/pages/card-viewer/card-viewer.page.scss","webpack:///src/app/pages/card-viewer/card-viewer.page.ts"],"names":["routes","path","component","CardViewerPageRoutingModule","imports","forChild","exports","CardViewerPageModule","declarations","schemas","CardViewerPage","lib","isSingleCard","cards","self","getCard","window","addEventListener","hash","location","substr","card","names","Object","keys","i","length","push","collectionCard","console","log","title","href","height","document","querySelector","clientHeight","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,2BAA2B;AAAA;AAAA,KAAxC;;AAAaA,+BAA2B,6DAJvC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIuC,GAA3BH,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQb,QAAaI,oBAAoB;AAAA;AAAA,KAAjC;;AAAaA,wBAAoB,6DAZhC,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,uFAJO,EAKP,8EALO,CADD;AAQRI,kBAAY,EAAE,CAAC,gEAAD,CARN;AASRC,aAAO,EAAC,CAAC,oEAAD;AATA,KAAT,CAYgC,GAApBF,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACxBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAaG,cAAc;AAOzB,8BACEC,GADF,EACgC;AAAA;;AAPhC,aAAAC,YAAA,GAAuB,IAAvB;AACA,aAAAC,KAAA,GAAoB,EAApB;AAQE,aAAKF,GAAL,GAAWA,GAAX;AACD;;AAXwB;AAAA;AAAA,mCAad;AACT,cAAMG,IAAI,GAAG,IAAb;AACA,eAAKC,OAAL;AAEAC,gBAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsC,YAAM;AAC1CH,gBAAI,CAACC,OAAL;AACD,WAFD,EAEG,KAFH;AAGD;AApBwB;AAAA;AAAA,kCAsBf;AACR,cAAMG,IAAI,GAAGF,MAAM,CAACG,QAAP,CAAgBD,IAAhB,CAAqBE,MAArB,CAA4B,CAA5B,CAAb;AACA,cAAMC,IAAI,GAAG,qEAAeH,IAAf,CAAb;AACA,eAAKL,KAAL,GAAa,EAAb;;AAEA,cAAIQ,IAAJ,EAAU;AACR,iBAAKT,YAAL,GAAoB,IAApB;AACA,mBAAOS,IAAP;AACD,WAHD,MAGO;AACL,iBAAKT,YAAL,GAAoB,KAApB;AACA,gBAAMU,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAY,oEAAZ,CAAd;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AACpC,mBAAKZ,KAAL,CAAWc,IAAX,CAAgB,qEAAeL,KAAK,CAACG,CAAD,CAApB,CAAhB;AACD;;AACD,mBAAO,KAAKZ,KAAL,CAAW,CAAX,CAAP;AACD;AACF;AAtCwB;AAAA;AAAA,iCAwChBQ,IAxCgB,EAwCP;AAChB,cAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAY,oEAAZ,CAAd;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AACpC,gBAAMG,cAAc,GAAG,qEAAeN,KAAK,CAACG,CAAD,CAApB,CAAvB;AACAI,mBAAO,CAACC,GAAR,CAAYT,IAAZ,EAAkBO,cAAlB;;AACA,gBAAIA,cAAc,CAACG,KAAf,KAAyBV,IAAI,CAACU,KAAlC,EAAwC;AACtCf,oBAAM,CAACG,QAAP,CAAgBa,IAAhB,GAAuB,kBAAkBV,KAAK,CAACG,CAAD,CAA9C,CADsC,CAEtC;AACD;AACF;AACF;AAlDwB;AAAA;AAAA,kCAoDlB;AACLT,gBAAM,CAACG,QAAP,CAAgBD,IAAhB,GAAuB,EAAvB,CADK,CAEL;AACD;AAvDwB;AAAA;AAAA,6CAyDP;AAChB,cAAMe,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC,YAA/C;AACA,iBAAQH,MAAM,GAAG,GAAV,GAAiB,EAAxB;AAED;AA7DwB;;AAAA;AAAA,OAA3B;;;;cAQQ;;;;AARKvB,kBAAc,6DAL1B,gEAAU;AACT2B,cAAQ,EAAE,iBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,4GAFS;;;;AAAA,KAAV,CAK0B,GAAd5B,cAAc,CAAd","file":"pages-card-viewer-card-viewer-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Dice Guardians - Card Viewer</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"grid\\\">\\n    <app-card\\n      *ngIf=\\\"isSingleCard\\\"\\n      [width]=\\\"getFullscreenWidth()\\\"\\n      [card]=\\\"getCard()\\\"\\n      [board]=\\\"lib.board\\\"\\n      [player]=\\\"lib.board.players.red\\\"\\n    ></app-card>\\n    <ion-button *ngIf=\\\"isSingleCard\\\" color=\\\"primary\\\" (click)=\\\"viewAll()\\\" class=\\\"view-all\\\">View All</ion-button>\\n\\n    <app-card\\n      *ngFor=\\\"let card of this.cards\\\"\\n      [width]=\\\"300\\\"\\n      [card]=\\\"card\\\"\\n      (click)=\\\"viewCard(card)\\\"\\n      [board]=\\\"lib.board\\\"\\n      [player]=\\\"lib.board.players.red\\\"\\n    ></app-card>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CardViewerPage } from './card-viewer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CardViewerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CardViewerPageRoutingModule {}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CardViewerPageRoutingModule } from './card-viewer-routing.module';\n\nimport { CardViewerPage } from './card-viewer.page';\n\nimport { ComponentsModule  } from '../../components/components.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CardViewerPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [CardViewerPage],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n\n})\nexport class CardViewerPageModule {}\n","export default \".grid {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n  flex-wrap: wrap;\\n}\\n\\n.view-all {\\n  position: absolute;\\n  top: 25px;\\n  right: 25px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tbnQvZC9Qcm9qZWN0cy9kaWNlLWd1YXJkaWFucy9hcHAvc3JjL2FwcC9wYWdlcy9jYXJkLXZpZXdlci9jYXJkLXZpZXdlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2NhcmQtdmlld2VyL2NhcmQtdmlld2VyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FDQ0Y7O0FERUE7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jYXJkLXZpZXdlci9jYXJkLXZpZXdlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JpZHtcclxuICBkaXNwbGF5OmZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6Y2VudGVyO1xyXG4gIHdpZHRoOjEwMCU7XHJcbiAgaGVpZ2h0OjEwMCU7XHJcbiAgZmxleC13cmFwOndyYXA7XHJcbn1cclxuXHJcbi52aWV3LWFsbHtcclxuICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICB0b3A6MjVweDtcclxuICByaWdodDoyNXB4O1xyXG59XHJcbiIsIi5ncmlkIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLnZpZXctYWxsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDI1cHg7XG4gIHJpZ2h0OiAyNXB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\n\nimport {\n  Card,\n  cardCollection\n} from 'dice-guardians-module'\n\nimport { DiceGuardiansModuleService } from '../../services/dice-guardians-module.service'\n\n\n@Component({\n  selector: 'app-card-viewer',\n  templateUrl: './card-viewer.page.html',\n  styleUrls: ['./card-viewer.page.scss'],\n})\nexport class CardViewerPage implements OnInit {\n  isSingleCard:boolean = true\n  cards:Array<Card> = []\n\n  lib:DiceGuardiansModuleService\n\n\n  constructor(\n    lib:DiceGuardiansModuleService\n  ) {\n    this.lib = lib\n  }\n\n  ngOnInit() {\n    const self = this\n    this.getCard()\n\n    window.addEventListener('hashchange', () => {\n      self.getCard()\n    }, false)\n  }\n\n  getCard() : Card{\n    const hash = window.location.hash.substr(1)\n    const card = cardCollection[hash]\n    this.cards = []\n\n    if (card) {\n      this.isSingleCard = true\n      return card\n    } else {\n      this.isSingleCard = false\n      const names = Object.keys(cardCollection)\n      for (let i = 0; i < names.length; i++){\n        this.cards.push(cardCollection[names[i]])\n      }\n      return this.cards[0]\n    }\n  }\n\n  viewCard(card:Card){\n    const names = Object.keys(cardCollection)\n    for (let i = 0; i < names.length; i++){\n      const collectionCard = cardCollection[names[i]]\n      console.log(card, collectionCard)\n      if (collectionCard.title === card.title){\n        window.location.href = '/card-viewer#' + names[i]\n        //window.location.reload()\n      }\n    }\n  }\n\n  viewAll(){\n    window.location.hash = ''\n    //window.location.reload()\n  }\n\n  getFullscreenWidth(){\n    const height = document.querySelector('.grid').clientHeight\n    return (height / 1.5) - 50\n\n  }\n}\n"]}